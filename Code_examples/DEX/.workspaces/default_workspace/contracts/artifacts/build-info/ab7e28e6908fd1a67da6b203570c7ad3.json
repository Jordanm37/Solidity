{
	"id": "ab7e28e6908fd1a67da6b203570c7ad3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityPool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//   *** Improvements ***\n\n/*\n\n1. ERC20 -> ERC20 pair\n2. Single swap function\n3. We would want to have a way of tracking the price.\n4. We could determine the initial prices based on the initial liquidity provided.\n5. LP shares will be pegged to the the constant product Function.\n6. We need a factory to deploy new pools\n\n\n*/\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ncontract LiquidityPool {\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    address public reserveToken;\n    address constant ltrAddress = 0x39DB207Dff3411F4fab0483D419306873Cbc13d9;\n    uint256 constant MINIMUMETH = 10000000000000000;\n    uint256 public kLast;\n\n    constructor(address _tokenAddress){\n        reserveToken = _tokenAddress;\n    }\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    function provideLiquidity(uint256 _amount) external payable {\n        require(_amount >= MINIMUMETH, \"Liquidity provided should be greater than 1 ETH\");\n        // IERC20(ltrAddress).approve(address(this), 1000000000000000000000);\n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount);\n        kLast = _amount * address(this).balance;\n        IERC20(ltrAddress).transfer(msg.sender, Math.sqrt(kLast));\n        emit liquidityProvided(msg.sender, _amount);\n    }\n\n    function reedemShares(uint256 _sharesAmount) public {\n        require(_sharesAmount > 0, \"Invalid amount of shares\");\n        require(IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount, \"Please approve the contract to deduct ltr tokens from your wallet\");\n\n        IERC20(ltrAddress).transferFrom(msg.sender, address(this), _sharesAmount);\n        IERC20(reserveToken).transfer(msg.sender, _sharesAmount);\n        (bool success, ) = payable(msg.sender).call{value: _sharesAmount}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    function getEth(uint256 _DAIAmount) public {\n        require(IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount, \"Contract not approved\");\n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _DAIAmount);\n        uint256 totalTokens = IERC20(reserveToken).balanceOf(address(this));\n        uint256 ethOut = address(this).balance - kLast/totalTokens;\n        if (address(this).balance <= ethOut) {\n            revert();\n        } else{\n            (bool success, ) = payable(msg.sender).call{value: ethOut}(\"\");\n            require(success, \"Transfer Failed\");\n        }\n    }\n\n    function getDAI() public payable {\n        require(msg.value > 0, \"The eth amount supplied must be greater than 0\");\n        uint256 totalDAISupply = IERC20(reserveToken).balanceOf(address(this));\n        uint256 totalEthSupply = address(this).balance;\n        uint256 DAIOut = totalDAISupply - kLast/totalEthSupply;\n        IERC20(reserveToken).transfer(msg.sender, DAIOut);\n    }\n\n    function transferTokens(address to, uint256 _amount) external {\n        IERC20(ltrAddress).transfer(to, _amount);\n    }\n\n    function swap(uint256 daiAmount) public payable{\n        if (msg.value > 0) {\n            getDAI();\n        } \n        else {\n            getEth(daiAmount);\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xCB 0xEB 0xD8 SWAP5 PUSH32 0xE40106B9136D8674C5D9F21BA4651C653F243B07A870A68AA0D464736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:8624:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093cbebd8947fe40106b9136d8674c5d9f21ba4651c653f243b07a870a68aa0d464736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/LiquidityPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getDAI",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_DAIAmount",
									"type": "uint256"
								}
							],
							"name": "getEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sharesAmount",
									"type": "uint256"
								}
							],
							"name": "reedemShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "daiAmount",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityPool.sol\":622:3447  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LiquidityPool.sol\":930:1009  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LiquidityPool.sol\":989:1002  _tokenAddress */\n  dup1\n    /* \"contracts/LiquidityPool.sol\":974:986  reserveToken */\n  0x00\n  dup1\n    /* \"contracts/LiquidityPool.sol\":974:1002  reserveToken = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LiquidityPool.sol\":930:1009  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/LiquidityPool.sol\":622:3447  contract LiquidityPool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LiquidityPool.sol\":622:3447  contract LiquidityPool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityPool.sol\":622:3447  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbec3fa17\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xbec3fa17\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeb521a4c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf4325d67\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xff9b3758\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x7464fc3d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8e3073a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8ef85568\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x94b918de\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":903:923  uint256 public kLast */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":2143:2755  function getEth(uint256 _DAIAmount) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/LiquidityPool.sol\":2761:3142  function getDAI() public payable {... */\n    tag_4:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/LiquidityPool.sol\":3273:3445  function swap(uint256 daiAmount) public payable{... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/LiquidityPool.sol\":3148:3267  function transferTokens(address to, uint256 _amount) external {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/LiquidityPool.sol\":1090:1574  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/LiquidityPool.sol\":739:766  address public reserveToken */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":1580:2137  function reedemShares(uint256 _sharesAmount) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/LiquidityPool.sol\":903:923  uint256 public kLast */\n    tag_13:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":2143:2755  function getEth(uint256 _DAIAmount) public {... */\n    tag_20:\n        /* \"contracts/LiquidityPool.sol\":2265:2275  _DAIAmount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2211:2223  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2204:2234  IERC20(reserveToken).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/LiquidityPool.sol\":2235:2245  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":2255:2259  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2204:2261  IERC20(reserveToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/LiquidityPool.sol\":2204:2275  IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount */\n      lt\n      iszero\n        /* \"contracts/LiquidityPool.sol\":2196:2301  require(IERC20(reserveToken).allowance(msg.sender, address(this)) >= _DAIAmount, \"Contract not approved\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/LiquidityPool.sol\":2318:2330  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2311:2344  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":2345:2355  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":2365:2369  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2372:2382  _DAIAmount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":2311:2383  IERC20(reserveToken).transferFrom(msg.sender, address(this), _DAIAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2393:2412  uint256 totalTokens */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2422:2434  reserveToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2415:2445  IERC20(reserveToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LiquidityPool.sol\":2454:2458  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2415:2460  IERC20(reserveToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_59:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_62:\n        /* \"contracts/LiquidityPool.sol\":2393:2460  uint256 totalTokens = IERC20(reserveToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2470:2484  uint256 ethOut */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2517:2528  totalTokens */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":2511:2516  kLast */\n      sload(0x01)\n        /* \"contracts/LiquidityPool.sol\":2511:2528  kLast/totalTokens */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/LiquidityPool.sol\":2487:2508  address(this).balance */\n      selfbalance\n        /* \"contracts/LiquidityPool.sol\":2487:2528  address(this).balance - kLast/totalTokens */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/LiquidityPool.sol\":2470:2528  uint256 ethOut = address(this).balance - kLast/totalTokens */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2567:2573  ethOut */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2542:2563  address(this).balance */\n      selfbalance\n        /* \"contracts/LiquidityPool.sol\":2542:2573  address(this).balance <= ethOut */\n      gt\n        /* \"contracts/LiquidityPool.sol\":2538:2749  if (address(this).balance <= ethOut) {... */\n      tag_67\n      jumpi\n        /* \"contracts/LiquidityPool.sol\":2589:2597  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":2538:2749  if (address(this).balance <= ethOut) {... */\n    tag_67:\n        /* \"contracts/LiquidityPool.sol\":2628:2640  bool success */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2654:2664  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":2646:2670  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2678:2684  ethOut */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":2646:2689  payable(msg.sender).call{value: ethOut}(\"\") */\n      mload(0x40)\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_73\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_72)\n    tag_73:\n      0x60\n      swap2\n      pop\n    tag_72:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2627:2689  (bool success, ) = payable(msg.sender).call{value: ethOut}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2711:2718  success */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2703:2738  require(success, \"Transfer Failed\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/LiquidityPool.sol\":2613:2749  {... */\n      pop\n        /* \"contracts/LiquidityPool.sol\":2186:2755  {... */\n      pop\n      pop\n        /* \"contracts/LiquidityPool.sol\":2143:2755  function getEth(uint256 _DAIAmount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":2761:3142  function getDAI() public payable {... */\n    tag_22:\n        /* \"contracts/LiquidityPool.sol\":2824:2825  0 */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2812:2821  msg.value */\n      callvalue\n        /* \"contracts/LiquidityPool.sol\":2812:2825  msg.value > 0 */\n      gt\n        /* \"contracts/LiquidityPool.sol\":2804:2876  require(msg.value > 0, \"The eth amount supplied must be greater than 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/LiquidityPool.sol\":2886:2908  uint256 totalDAISupply */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2918:2930  reserveToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2911:2941  IERC20(reserveToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LiquidityPool.sol\":2950:2954  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":2911:2956  IERC20(reserveToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_84:\n        /* \"contracts/LiquidityPool.sol\":2886:2956  uint256 totalDAISupply = IERC20(reserveToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2966:2988  uint256 totalEthSupply */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2991:3012  address(this).balance */\n      selfbalance\n        /* \"contracts/LiquidityPool.sol\":2966:3012  uint256 totalEthSupply = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":3022:3036  uint256 DAIOut */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":3062:3076  totalEthSupply */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":3056:3061  kLast */\n      sload(0x01)\n        /* \"contracts/LiquidityPool.sol\":3056:3076  kLast/totalEthSupply */\n      tag_85\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_85:\n        /* \"contracts/LiquidityPool.sol\":3039:3053  totalDAISupply */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":3039:3076  totalDAISupply - kLast/totalEthSupply */\n      tag_86\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"contracts/LiquidityPool.sol\":3022:3076  uint256 DAIOut = totalDAISupply - kLast/totalEthSupply */\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":3093:3105  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":3086:3115  IERC20(reserveToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":3116:3126  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":3128:3134  DAIOut */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":3086:3135  IERC20(reserveToken).transfer(msg.sender, DAIOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_91:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2794:3142  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LiquidityPool.sol\":2761:3142  function getDAI() public payable {... */\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":3273:3445  function swap(uint256 daiAmount) public payable{... */\n    tag_25:\n        /* \"contracts/LiquidityPool.sol\":3346:3347  0 */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":3334:3343  msg.value */\n      callvalue\n        /* \"contracts/LiquidityPool.sol\":3334:3347  msg.value > 0 */\n      gt\n        /* \"contracts/LiquidityPool.sol\":3330:3439  if (msg.value > 0) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"contracts/LiquidityPool.sol\":3363:3371  getDAI() */\n      tag_94\n        /* \"contracts/LiquidityPool.sol\":3363:3369  getDAI */\n      tag_22\n        /* \"contracts/LiquidityPool.sol\":3363:3371  getDAI() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/LiquidityPool.sol\":3330:3439  if (msg.value > 0) {... */\n      jump(tag_95)\n    tag_93:\n        /* \"contracts/LiquidityPool.sol\":3411:3428  getEth(daiAmount) */\n      tag_96\n        /* \"contracts/LiquidityPool.sol\":3418:3427  daiAmount */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":3411:3417  getEth */\n      tag_20\n        /* \"contracts/LiquidityPool.sol\":3411:3428  getEth(daiAmount) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/LiquidityPool.sol\":3330:3439  if (msg.value > 0) {... */\n    tag_95:\n        /* \"contracts/LiquidityPool.sol\":3273:3445  function swap(uint256 daiAmount) public payable{... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":3148:3267  function transferTokens(address to, uint256 _amount) external {... */\n    tag_30:\n        /* \"contracts/LiquidityPool.sol\":802:844  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":3220:3247  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":3248:3250  to */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":3252:3259  _amount */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":3220:3260  IERC20(ltrAddress).transfer(to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_98:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_101:\n      pop\n        /* \"contracts/LiquidityPool.sol\":3148:3267  function transferTokens(address to, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":1090:1574  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_33:\n        /* \"contracts/LiquidityPool.sol\":880:897  10000000000000000 */\n      0x2386f26fc10000\n        /* \"contracts/LiquidityPool.sol\":1168:1175  _amount */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":1168:1189  _amount >= MINIMUMETH */\n      lt\n      iszero\n        /* \"contracts/LiquidityPool.sol\":1160:1241  require(_amount >= MINIMUMETH, \"Liquidity provided should be greater than 1 ETH\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/LiquidityPool.sol\":1336:1348  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":1329:1362  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":1363:1373  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1383:1387  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":1390:1397  _amount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":1329:1398  IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_109:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1426:1447  address(this).balance */\n      selfbalance\n        /* \"contracts/LiquidityPool.sol\":1416:1423  _amount */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":1416:1447  _amount * address(this).balance */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"contracts/LiquidityPool.sol\":1408:1413  kLast */\n      0x01\n        /* \"contracts/LiquidityPool.sol\":1408:1447  kLast = _amount * address(this).balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LiquidityPool.sol\":802:844  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":1457:1484  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":1485:1495  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1497:1513  Math.sqrt(kLast) */\n      tag_112\n        /* \"contracts/LiquidityPool.sol\":1507:1512  kLast */\n      sload(0x01)\n        /* \"contracts/LiquidityPool.sol\":1497:1506  Math.sqrt */\n      tag_113\n        /* \"contracts/LiquidityPool.sol\":1497:1513  Math.sqrt(kLast) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/LiquidityPool.sol\":1457:1514  IERC20(ltrAddress).transfer(msg.sender, Math.sqrt(kLast)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_114:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_117:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1529:1567  liquidityProvided(msg.sender, _amount) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/LiquidityPool.sol\":1547:1557  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1559:1566  _amount */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":1529:1567  liquidityProvided(msg.sender, _amount) */\n      mload(0x40)\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityPool.sol\":1090:1574  function provideLiquidity(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":739:766  address public reserveToken */\n    tag_36:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":1580:2137  function reedemShares(uint256 _sharesAmount) public {... */\n    tag_42:\n        /* \"contracts/LiquidityPool.sol\":1666:1667  0 */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":1650:1663  _sharesAmount */\n      dup2\n        /* \"contracts/LiquidityPool.sol\":1650:1667  _sharesAmount > 0 */\n      gt\n        /* \"contracts/LiquidityPool.sol\":1642:1696  require(_sharesAmount > 0, \"Invalid amount of shares\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/LiquidityPool.sol\":1773:1786  _sharesAmount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":802:844  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":1714:1742  IERC20(ltrAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/LiquidityPool.sol\":1743:1753  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1763:1767  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":1714:1769  IERC20(ltrAddress).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_126:\n        /* \"contracts/LiquidityPool.sol\":1714:1786  IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount */\n      lt\n      iszero\n        /* \"contracts/LiquidityPool.sol\":1706:1856  require(IERC20(ltrAddress).allowance(msg.sender, address(this)) >= _sharesAmount, \"Please approve the contract to deduct ltr tokens from your wallet\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/LiquidityPool.sol\":802:844  0x39DB207Dff3411F4fab0483D419306873Cbc13d9 */\n      0x39db207dff3411f4fab0483d419306873cbc13d9\n        /* \"contracts/LiquidityPool.sol\":1867:1898  IERC20(ltrAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":1899:1909  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1919:1923  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":1926:1939  _sharesAmount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":1867:1940  IERC20(ltrAddress).transferFrom(msg.sender, address(this), _sharesAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_133:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1957:1969  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":1950:1979  IERC20(reserveToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":1980:1990  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1992:2005  _sharesAmount */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":1950:2006  IERC20(reserveToken).transfer(msg.sender, _sharesAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_137:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2017:2029  bool success */\n      0x00\n        /* \"contracts/LiquidityPool.sol\":2043:2053  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":2035:2059  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":2067:2080  _sharesAmount */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":2035:2085  payable(msg.sender).call{value: _sharesAmount}(\"\") */\n      mload(0x40)\n      tag_138\n      swap1\n      tag_70\n      jump\t// in\n    tag_138:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_141\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_140)\n    tag_141:\n      0x60\n      swap2\n      pop\n    tag_140:\n      pop\n        /* \"contracts/LiquidityPool.sol\":2016:2085  (bool success, ) = payable(msg.sender).call{value: _sharesAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/LiquidityPool.sol\":2103:2110  success */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":2095:2130  require(success, \"Transfer failed\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/LiquidityPool.sol\":1632:2137  {... */\n      pop\n        /* \"contracts/LiquidityPool.sol\":1580:2137  function reedemShares(uint256 _sharesAmount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6329:6336  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6357:6358  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6353  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6352:6358  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6374:6382  return 0 */\n      swap1\n      pop\n      jump(tag_145)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6348:6393  if (a == 0) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7072  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7075:7076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7058:7076  uint256 result = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7095  uint256 x */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7098:7099  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7086:7099  uint256 x = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7124:7125  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7118:7121  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7114  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7121  x >> 128 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7113:7125  x >> 128 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7147:7150  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7141:7150  x >>= 128 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7175:7177  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7164:7177  result <<= 64 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7109:7188  if (x >> 128 > 0) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7211:7212  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7206:7208  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7202  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7208  x >> 64 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7201:7212  x >> 64 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7234:7236  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7228:7236  x >>= 64 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7261:7263  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7250:7263  result <<= 32 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7197:7274  if (x >> 64 > 0) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7297:7298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7292:7294  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7288  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7294  x >> 32 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7287:7298  x >> 32 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7320:7322  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7314:7322  x >>= 32 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7347:7349  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7336:7349  result <<= 16 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7283:7360  if (x >> 32 > 0) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7383:7384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7378:7380  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7374  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7380  x >> 16 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7373:7384  x >> 16 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7406:7408  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7400:7408  x >>= 16 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7433:7434  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7422:7434  result <<= 8 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7369:7445  if (x >> 16 > 0) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7467:7468  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7463:7464  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7459  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7464  x >> 8 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7458:7468  x >> 8 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7490:7491  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7484:7491  x >>= 8 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7516:7517  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7505:7517  result <<= 4 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7454:7528  if (x >> 8 > 0) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7550:7551  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7546:7547  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7542  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7547  x >> 4 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7541:7551  x >> 4 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7573:7574  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7567:7574  x >>= 4 */\n      dup2\n      swap1\n      shr\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7599:7600  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7588:7600  result <<= 2 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7537:7611  if (x >> 4 > 0) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7633:7634  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7629:7630  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7625  x */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7630  x >> 2 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7624:7634  x >> 2 > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7661:7662  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7650:7662  result <<= 1 */\n      dup3\n      swap1\n      shl\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":7620:7673  if (x >> 2 > 0) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8131:8132  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8120:8126  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8117  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8116:8126  a / result */\n      dup2\n      tag_154\n      jumpi\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n    tag_154:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8113  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8107:8126  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8106:8132  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8097:8132  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8180:8181  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8169:8175  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8166  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8165:8175  a / result */\n      dup2\n      tag_157\n      jumpi\n      tag_158\n      tag_156\n      jump\t// in\n    tag_158:\n    tag_157:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8162  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8156:8175  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8155:8181  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8146:8181  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8229:8230  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8218:8224  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8215  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8214:8224  a / result */\n      dup2\n      tag_159\n      jumpi\n      tag_160\n      tag_156\n      jump\t// in\n    tag_160:\n    tag_159:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8211  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8205:8224  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8204:8230  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8195:8230  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8278:8279  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8267:8273  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8264  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8263:8273  a / result */\n      dup2\n      tag_161\n      jumpi\n      tag_162\n      tag_156\n      jump\t// in\n    tag_162:\n    tag_161:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8260  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8254:8273  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8253:8279  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8244:8279  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8327:8328  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8316:8322  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8313  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8312:8322  a / result */\n      dup2\n      tag_163\n      jumpi\n      tag_164\n      tag_156\n      jump\t// in\n    tag_164:\n    tag_163:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8309  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8303:8322  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8302:8328  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8293:8328  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8376:8377  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8365:8371  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8362  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8361:8371  a / result */\n      dup2\n      tag_165\n      jumpi\n      tag_166\n      tag_156\n      jump\t// in\n    tag_166:\n    tag_165:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8358  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8352:8371  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8351:8377  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8342:8377  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8425:8426  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8414:8420  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8411  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8410:8420  a / result */\n      dup2\n      tag_167\n      jumpi\n      tag_168\n      tag_156\n      jump\t// in\n    tag_168:\n    tag_167:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8407  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8401:8420  result + a / result */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8400:8426  (result + a / result) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8391:8426  result = (result + a / result) >> 1 */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8451:8457  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8463:8469  result */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8460  a */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8459:8469  a / result */\n      dup2\n      tag_170\n      jumpi\n      tag_171\n      tag_156\n      jump\t// in\n    tag_171:\n    tag_170:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8450  min */\n      tag_172\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8447:8470  min(result, a / result) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":8440:8470  return min(result, a / result) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":6281:8487  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_145:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":647:654  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":677:678  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:674  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:678  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":685:686  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n      jump(tag_175)\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":681:682  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":666:686  return a < b ? a : b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":589:693  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_176:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_177:\n        /* \"#utility.yul\":177:201   */\n      tag_214\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_176\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_216\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_177\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_179:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_181:\n        /* \"#utility.yul\":842:866   */\n      tag_221\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_176\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_222:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_182:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_224\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_181\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_19:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_227\n      tag_179\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1118:1237   */\n    tag_226:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_228\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_182\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_183:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_184:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_231\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_183\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_185:\n        /* \"#utility.yul\":1684:1708   */\n      tag_233\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_184\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_234:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_186:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_236\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_185\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_29:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      dup1\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_239\n      tag_179\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1977:2096   */\n    tag_238:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_240\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_186\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_241\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_182\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_187:\n        /* \"#utility.yul\":2451:2475   */\n      tag_243\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_184\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_38:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_245\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_187\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3048   */\n    tag_45:\n        /* \"#utility.yul\":2837:2841   */\n      0x00\n        /* \"#utility.yul\":2875:2877   */\n      0x40\n        /* \"#utility.yul\":2864:2873   */\n      dup3\n        /* \"#utility.yul\":2860:2878   */\n      add\n        /* \"#utility.yul\":2852:2878   */\n      swap1\n      pop\n        /* \"#utility.yul\":2888:2959   */\n      tag_247\n        /* \"#utility.yul\":2956:2957   */\n      0x00\n        /* \"#utility.yul\":2945:2954   */\n      dup4\n        /* \"#utility.yul\":2941:2958   */\n      add\n        /* \"#utility.yul\":2932:2938   */\n      dup6\n        /* \"#utility.yul\":2888:2959   */\n      tag_187\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2969:3041   */\n      tag_248\n        /* \"#utility.yul\":3037:3039   */\n      0x20\n        /* \"#utility.yul\":3026:3035   */\n      dup4\n        /* \"#utility.yul\":3022:3040   */\n      add\n        /* \"#utility.yul\":3013:3019   */\n      dup5\n        /* \"#utility.yul\":2969:3041   */\n      tag_187\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2716:3048   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3054:3197   */\n    tag_188:\n        /* \"#utility.yul\":3111:3116   */\n      0x00\n        /* \"#utility.yul\":3142:3148   */\n      dup2\n        /* \"#utility.yul\":3136:3149   */\n      mload\n        /* \"#utility.yul\":3127:3149   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3191   */\n      tag_250\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3158:3191   */\n      tag_181\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3054:3197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3203:3554   */\n    tag_49:\n        /* \"#utility.yul\":3273:3279   */\n      0x00\n        /* \"#utility.yul\":3322:3324   */\n      0x20\n        /* \"#utility.yul\":3310:3319   */\n      dup3\n        /* \"#utility.yul\":3301:3308   */\n      dup5\n        /* \"#utility.yul\":3297:3320   */\n      sub\n        /* \"#utility.yul\":3293:3325   */\n      slt\n        /* \"#utility.yul\":3290:3409   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3328:3407   */\n      tag_253\n      tag_179\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3290:3409   */\n    tag_252:\n        /* \"#utility.yul\":3448:3449   */\n      0x00\n        /* \"#utility.yul\":3473:3537   */\n      tag_254\n        /* \"#utility.yul\":3529:3536   */\n      dup5\n        /* \"#utility.yul\":3520:3526   */\n      dup3\n        /* \"#utility.yul\":3509:3518   */\n      dup6\n        /* \"#utility.yul\":3505:3527   */\n      add\n        /* \"#utility.yul\":3473:3537   */\n      tag_188\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3463:3537   */\n      swap2\n      pop\n        /* \"#utility.yul\":3419:3547   */\n      pop\n        /* \"#utility.yul\":3203:3554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3560:3729   */\n    tag_189:\n        /* \"#utility.yul\":3644:3655   */\n      0x00\n        /* \"#utility.yul\":3678:3684   */\n      dup3\n        /* \"#utility.yul\":3673:3676   */\n      dup3\n        /* \"#utility.yul\":3666:3685   */\n      mstore\n        /* \"#utility.yul\":3718:3722   */\n      0x20\n        /* \"#utility.yul\":3713:3716   */\n      dup3\n        /* \"#utility.yul\":3709:3723   */\n      add\n        /* \"#utility.yul\":3694:3723   */\n      swap1\n      pop\n        /* \"#utility.yul\":3560:3729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3735:3906   */\n    tag_190:\n        /* \"#utility.yul\":3875:3898   */\n      0x436f6e7472616374206e6f7420617070726f7665640000000000000000000000\n        /* \"#utility.yul\":3871:3872   */\n      0x00\n        /* \"#utility.yul\":3863:3869   */\n      dup3\n        /* \"#utility.yul\":3859:3873   */\n      add\n        /* \"#utility.yul\":3852:3899   */\n      mstore\n        /* \"#utility.yul\":3735:3906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4278   */\n    tag_191:\n        /* \"#utility.yul\":4054:4057   */\n      0x00\n        /* \"#utility.yul\":4075:4142   */\n      tag_258\n        /* \"#utility.yul\":4139:4141   */\n      0x15\n        /* \"#utility.yul\":4134:4137   */\n      dup4\n        /* \"#utility.yul\":4075:4142   */\n      tag_189\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4068:4142   */\n      swap2\n      pop\n        /* \"#utility.yul\":4151:4244   */\n      tag_259\n        /* \"#utility.yul\":4240:4243   */\n      dup3\n        /* \"#utility.yul\":4151:4244   */\n      tag_190\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4269:4271   */\n      0x20\n        /* \"#utility.yul\":4264:4267   */\n      dup3\n        /* \"#utility.yul\":4260:4272   */\n      add\n        /* \"#utility.yul\":4253:4272   */\n      swap1\n      pop\n        /* \"#utility.yul\":3912:4278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4284:4703   */\n    tag_52:\n        /* \"#utility.yul\":4450:4454   */\n      0x00\n        /* \"#utility.yul\":4488:4490   */\n      0x20\n        /* \"#utility.yul\":4477:4486   */\n      dup3\n        /* \"#utility.yul\":4473:4491   */\n      add\n        /* \"#utility.yul\":4465:4491   */\n      swap1\n      pop\n        /* \"#utility.yul\":4537:4546   */\n      dup2\n        /* \"#utility.yul\":4531:4535   */\n      dup2\n        /* \"#utility.yul\":4527:4547   */\n      sub\n        /* \"#utility.yul\":4523:4524   */\n      0x00\n        /* \"#utility.yul\":4512:4521   */\n      dup4\n        /* \"#utility.yul\":4508:4525   */\n      add\n        /* \"#utility.yul\":4501:4548   */\n      mstore\n        /* \"#utility.yul\":4565:4696   */\n      tag_261\n        /* \"#utility.yul\":4691:4695   */\n      dup2\n        /* \"#utility.yul\":4565:4696   */\n      tag_191\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4557:4696   */\n      swap1\n      pop\n        /* \"#utility.yul\":4284:4703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4709:5151   */\n    tag_54:\n        /* \"#utility.yul\":4858:4862   */\n      0x00\n        /* \"#utility.yul\":4896:4898   */\n      0x60\n        /* \"#utility.yul\":4885:4894   */\n      dup3\n        /* \"#utility.yul\":4881:4899   */\n      add\n        /* \"#utility.yul\":4873:4899   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:4980   */\n      tag_263\n        /* \"#utility.yul\":4977:4978   */\n      0x00\n        /* \"#utility.yul\":4966:4975   */\n      dup4\n        /* \"#utility.yul\":4962:4979   */\n      add\n        /* \"#utility.yul\":4953:4959   */\n      dup7\n        /* \"#utility.yul\":4909:4980   */\n      tag_187\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4990:5062   */\n      tag_264\n        /* \"#utility.yul\":5058:5060   */\n      0x20\n        /* \"#utility.yul\":5047:5056   */\n      dup4\n        /* \"#utility.yul\":5043:5061   */\n      add\n        /* \"#utility.yul\":5034:5040   */\n      dup6\n        /* \"#utility.yul\":4990:5062   */\n      tag_187\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5072:5144   */\n      tag_265\n        /* \"#utility.yul\":5140:5142   */\n      0x40\n        /* \"#utility.yul\":5129:5138   */\n      dup4\n        /* \"#utility.yul\":5125:5143   */\n      add\n        /* \"#utility.yul\":5116:5122   */\n      dup5\n        /* \"#utility.yul\":5072:5144   */\n      tag_177\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4709:5151   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5157:5247   */\n    tag_192:\n        /* \"#utility.yul\":5191:5198   */\n      0x00\n        /* \"#utility.yul\":5234:5239   */\n      dup2\n        /* \"#utility.yul\":5227:5240   */\n      iszero\n        /* \"#utility.yul\":5220:5241   */\n      iszero\n        /* \"#utility.yul\":5209:5241   */\n      swap1\n      pop\n        /* \"#utility.yul\":5157:5247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5253:5369   */\n    tag_193:\n        /* \"#utility.yul\":5323:5344   */\n      tag_268\n        /* \"#utility.yul\":5338:5343   */\n      dup2\n        /* \"#utility.yul\":5323:5344   */\n      tag_192\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5316:5321   */\n      dup2\n        /* \"#utility.yul\":5313:5345   */\n      eq\n        /* \"#utility.yul\":5303:5363   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5359:5360   */\n      0x00\n        /* \"#utility.yul\":5356:5357   */\n      dup1\n        /* \"#utility.yul\":5349:5361   */\n      revert\n        /* \"#utility.yul\":5303:5363   */\n    tag_269:\n        /* \"#utility.yul\":5253:5369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5375:5512   */\n    tag_194:\n        /* \"#utility.yul\":5429:5434   */\n      0x00\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5454:5467   */\n      mload\n        /* \"#utility.yul\":5445:5467   */\n      swap1\n      pop\n        /* \"#utility.yul\":5476:5506   */\n      tag_271\n        /* \"#utility.yul\":5500:5505   */\n      dup2\n        /* \"#utility.yul\":5476:5506   */\n      tag_193\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5375:5512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5518:5863   */\n    tag_58:\n        /* \"#utility.yul\":5585:5591   */\n      0x00\n        /* \"#utility.yul\":5634:5636   */\n      0x20\n        /* \"#utility.yul\":5622:5631   */\n      dup3\n        /* \"#utility.yul\":5613:5620   */\n      dup5\n        /* \"#utility.yul\":5609:5632   */\n      sub\n        /* \"#utility.yul\":5605:5637   */\n      slt\n        /* \"#utility.yul\":5602:5721   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5640:5719   */\n      tag_274\n      tag_179\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5602:5721   */\n    tag_273:\n        /* \"#utility.yul\":5760:5761   */\n      0x00\n        /* \"#utility.yul\":5785:5846   */\n      tag_275\n        /* \"#utility.yul\":5838:5845   */\n      dup5\n        /* \"#utility.yul\":5829:5835   */\n      dup3\n        /* \"#utility.yul\":5818:5827   */\n      dup6\n        /* \"#utility.yul\":5814:5836   */\n      add\n        /* \"#utility.yul\":5785:5846   */\n      tag_194\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5775:5846   */\n      swap2\n      pop\n        /* \"#utility.yul\":5731:5856   */\n      pop\n        /* \"#utility.yul\":5518:5863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5869:6049   */\n    tag_156:\n        /* \"#utility.yul\":5917:5994   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5914:5915   */\n      0x00\n        /* \"#utility.yul\":5907:5995   */\n      mstore\n        /* \"#utility.yul\":6014:6018   */\n      0x12\n        /* \"#utility.yul\":6011:6012   */\n      0x04\n        /* \"#utility.yul\":6004:6019   */\n      mstore\n        /* \"#utility.yul\":6038:6042   */\n      0x24\n        /* \"#utility.yul\":6035:6036   */\n      0x00\n        /* \"#utility.yul\":6028:6043   */\n      revert\n        /* \"#utility.yul\":6055:6235   */\n    tag_195:\n        /* \"#utility.yul\":6103:6180   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6093:6181   */\n      mstore\n        /* \"#utility.yul\":6200:6204   */\n      0x11\n        /* \"#utility.yul\":6197:6198   */\n      0x04\n        /* \"#utility.yul\":6190:6205   */\n      mstore\n        /* \"#utility.yul\":6224:6228   */\n      0x24\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6214:6229   */\n      revert\n        /* \"#utility.yul\":6241:6426   */\n    tag_64:\n        /* \"#utility.yul\":6281:6282   */\n      0x00\n        /* \"#utility.yul\":6298:6318   */\n      tag_279\n        /* \"#utility.yul\":6316:6317   */\n      dup3\n        /* \"#utility.yul\":6298:6318   */\n      tag_176\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6293:6318   */\n      swap2\n      pop\n        /* \"#utility.yul\":6332:6352   */\n      tag_280\n        /* \"#utility.yul\":6350:6351   */\n      dup4\n        /* \"#utility.yul\":6332:6352   */\n      tag_176\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6327:6352   */\n      swap3\n      pop\n        /* \"#utility.yul\":6371:6372   */\n      dup3\n        /* \"#utility.yul\":6361:6396   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":6376:6394   */\n      tag_282\n      tag_156\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6361:6396   */\n    tag_281:\n        /* \"#utility.yul\":6418:6419   */\n      dup3\n        /* \"#utility.yul\":6415:6416   */\n      dup3\n        /* \"#utility.yul\":6411:6420   */\n      div\n        /* \"#utility.yul\":6406:6420   */\n      swap1\n      pop\n        /* \"#utility.yul\":6241:6426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6432:6626   */\n    tag_66:\n        /* \"#utility.yul\":6472:6476   */\n      0x00\n        /* \"#utility.yul\":6492:6512   */\n      tag_284\n        /* \"#utility.yul\":6510:6511   */\n      dup3\n        /* \"#utility.yul\":6492:6512   */\n      tag_176\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6487:6512   */\n      swap2\n      pop\n        /* \"#utility.yul\":6526:6546   */\n      tag_285\n        /* \"#utility.yul\":6544:6545   */\n      dup4\n        /* \"#utility.yul\":6526:6546   */\n      tag_176\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6521:6546   */\n      swap3\n      pop\n        /* \"#utility.yul\":6570:6571   */\n      dup3\n        /* \"#utility.yul\":6567:6568   */\n      dup3\n        /* \"#utility.yul\":6563:6572   */\n      sub\n        /* \"#utility.yul\":6555:6572   */\n      swap1\n      pop\n        /* \"#utility.yul\":6594:6595   */\n      dup2\n        /* \"#utility.yul\":6588:6592   */\n      dup2\n        /* \"#utility.yul\":6585:6596   */\n      gt\n        /* \"#utility.yul\":6582:6619   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":6599:6617   */\n      tag_287\n      tag_195\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6582:6619   */\n    tag_286:\n        /* \"#utility.yul\":6432:6626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:6779   */\n    tag_196:\n        /* \"#utility.yul\":6733:6744   */\n      0x00\n        /* \"#utility.yul\":6770:6773   */\n      dup2\n        /* \"#utility.yul\":6755:6773   */\n      swap1\n      pop\n        /* \"#utility.yul\":6632:6779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6785:6899   */\n    tag_197:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6905:7303   */\n    tag_198:\n        /* \"#utility.yul\":7064:7067   */\n      0x00\n        /* \"#utility.yul\":7085:7168   */\n      tag_291\n        /* \"#utility.yul\":7166:7167   */\n      0x00\n        /* \"#utility.yul\":7161:7164   */\n      dup4\n        /* \"#utility.yul\":7085:7168   */\n      tag_196\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7078:7168   */\n      swap2\n      pop\n        /* \"#utility.yul\":7177:7270   */\n      tag_292\n        /* \"#utility.yul\":7266:7269   */\n      dup3\n        /* \"#utility.yul\":7177:7270   */\n      tag_197\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7295:7296   */\n      0x00\n        /* \"#utility.yul\":7290:7293   */\n      dup3\n        /* \"#utility.yul\":7286:7297   */\n      add\n        /* \"#utility.yul\":7279:7297   */\n      swap1\n      pop\n        /* \"#utility.yul\":6905:7303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7309:7688   */\n    tag_70:\n        /* \"#utility.yul\":7493:7496   */\n      0x00\n        /* \"#utility.yul\":7515:7662   */\n      tag_294\n        /* \"#utility.yul\":7658:7661   */\n      dup3\n        /* \"#utility.yul\":7515:7662   */\n      tag_198\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7508:7662   */\n      swap2\n      pop\n        /* \"#utility.yul\":7679:7682   */\n      dup2\n        /* \"#utility.yul\":7672:7682   */\n      swap1\n      pop\n        /* \"#utility.yul\":7309:7688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7694:7859   */\n    tag_199:\n        /* \"#utility.yul\":7834:7851   */\n      0x5472616e73666572204661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":7830:7831   */\n      0x00\n        /* \"#utility.yul\":7822:7828   */\n      dup3\n        /* \"#utility.yul\":7818:7832   */\n      add\n        /* \"#utility.yul\":7811:7852   */\n      mstore\n        /* \"#utility.yul\":7694:7859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7865:8231   */\n    tag_200:\n        /* \"#utility.yul\":8007:8010   */\n      0x00\n        /* \"#utility.yul\":8028:8095   */\n      tag_297\n        /* \"#utility.yul\":8092:8094   */\n      0x0f\n        /* \"#utility.yul\":8087:8090   */\n      dup4\n        /* \"#utility.yul\":8028:8095   */\n      tag_189\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8021:8095   */\n      swap2\n      pop\n        /* \"#utility.yul\":8104:8197   */\n      tag_298\n        /* \"#utility.yul\":8193:8196   */\n      dup3\n        /* \"#utility.yul\":8104:8197   */\n      tag_199\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":8222:8224   */\n      0x20\n        /* \"#utility.yul\":8217:8220   */\n      dup3\n        /* \"#utility.yul\":8213:8225   */\n      add\n        /* \"#utility.yul\":8206:8225   */\n      swap1\n      pop\n        /* \"#utility.yul\":7865:8231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8237:8656   */\n    tag_76:\n        /* \"#utility.yul\":8403:8407   */\n      0x00\n        /* \"#utility.yul\":8441:8443   */\n      0x20\n        /* \"#utility.yul\":8430:8439   */\n      dup3\n        /* \"#utility.yul\":8426:8444   */\n      add\n        /* \"#utility.yul\":8418:8444   */\n      swap1\n      pop\n        /* \"#utility.yul\":8490:8499   */\n      dup2\n        /* \"#utility.yul\":8484:8488   */\n      dup2\n        /* \"#utility.yul\":8480:8500   */\n      sub\n        /* \"#utility.yul\":8476:8477   */\n      0x00\n        /* \"#utility.yul\":8465:8474   */\n      dup4\n        /* \"#utility.yul\":8461:8478   */\n      add\n        /* \"#utility.yul\":8454:8501   */\n      mstore\n        /* \"#utility.yul\":8518:8649   */\n      tag_300\n        /* \"#utility.yul\":8644:8648   */\n      dup2\n        /* \"#utility.yul\":8518:8649   */\n      tag_200\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8510:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8237:8656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8895   */\n    tag_201:\n        /* \"#utility.yul\":8802:8836   */\n      0x5468652065746820616d6f756e7420737570706c696564206d75737420626520\n        /* \"#utility.yul\":8798:8799   */\n      0x00\n        /* \"#utility.yul\":8790:8796   */\n      dup3\n        /* \"#utility.yul\":8786:8800   */\n      add\n        /* \"#utility.yul\":8779:8837   */\n      mstore\n        /* \"#utility.yul\":8871:8887   */\n      0x67726561746572207468616e2030000000000000000000000000000000000000\n        /* \"#utility.yul\":8866:8868   */\n      0x20\n        /* \"#utility.yul\":8858:8864   */\n      dup3\n        /* \"#utility.yul\":8854:8869   */\n      add\n        /* \"#utility.yul\":8847:8888   */\n      mstore\n        /* \"#utility.yul\":8662:8895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8901:9267   */\n    tag_202:\n        /* \"#utility.yul\":9043:9046   */\n      0x00\n        /* \"#utility.yul\":9064:9131   */\n      tag_303\n        /* \"#utility.yul\":9128:9130   */\n      0x2e\n        /* \"#utility.yul\":9123:9126   */\n      dup4\n        /* \"#utility.yul\":9064:9131   */\n      tag_189\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9057:9131   */\n      swap2\n      pop\n        /* \"#utility.yul\":9140:9233   */\n      tag_304\n        /* \"#utility.yul\":9229:9232   */\n      dup3\n        /* \"#utility.yul\":9140:9233   */\n      tag_201\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9258:9260   */\n      0x40\n        /* \"#utility.yul\":9253:9256   */\n      dup3\n        /* \"#utility.yul\":9249:9261   */\n      add\n        /* \"#utility.yul\":9242:9261   */\n      swap1\n      pop\n        /* \"#utility.yul\":8901:9267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9273:9692   */\n    tag_80:\n        /* \"#utility.yul\":9439:9443   */\n      0x00\n        /* \"#utility.yul\":9477:9479   */\n      0x20\n        /* \"#utility.yul\":9466:9475   */\n      dup3\n        /* \"#utility.yul\":9462:9480   */\n      add\n        /* \"#utility.yul\":9454:9480   */\n      swap1\n      pop\n        /* \"#utility.yul\":9526:9535   */\n      dup2\n        /* \"#utility.yul\":9520:9524   */\n      dup2\n        /* \"#utility.yul\":9516:9536   */\n      sub\n        /* \"#utility.yul\":9512:9513   */\n      0x00\n        /* \"#utility.yul\":9501:9510   */\n      dup4\n        /* \"#utility.yul\":9497:9514   */\n      add\n        /* \"#utility.yul\":9490:9537   */\n      mstore\n        /* \"#utility.yul\":9554:9685   */\n      tag_306\n        /* \"#utility.yul\":9680:9684   */\n      dup2\n        /* \"#utility.yul\":9554:9685   */\n      tag_202\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9546:9685   */\n      swap1\n      pop\n        /* \"#utility.yul\":9273:9692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9698:10030   */\n    tag_88:\n        /* \"#utility.yul\":9819:9823   */\n      0x00\n        /* \"#utility.yul\":9857:9859   */\n      0x40\n        /* \"#utility.yul\":9846:9855   */\n      dup3\n        /* \"#utility.yul\":9842:9860   */\n      add\n        /* \"#utility.yul\":9834:9860   */\n      swap1\n      pop\n        /* \"#utility.yul\":9870:9941   */\n      tag_308\n        /* \"#utility.yul\":9938:9939   */\n      0x00\n        /* \"#utility.yul\":9927:9936   */\n      dup4\n        /* \"#utility.yul\":9923:9940   */\n      add\n        /* \"#utility.yul\":9914:9920   */\n      dup6\n        /* \"#utility.yul\":9870:9941   */\n      tag_187\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":9951:10023   */\n      tag_309\n        /* \"#utility.yul\":10019:10021   */\n      0x20\n        /* \"#utility.yul\":10008:10017   */\n      dup4\n        /* \"#utility.yul\":10004:10022   */\n      add\n        /* \"#utility.yul\":9995:10001   */\n      dup5\n        /* \"#utility.yul\":9951:10023   */\n      tag_177\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9698:10030   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10036:10270   */\n    tag_203:\n        /* \"#utility.yul\":10176:10210   */\n      0x4c69717569646974792070726f76696465642073686f756c6420626520677265\n        /* \"#utility.yul\":10172:10173   */\n      0x00\n        /* \"#utility.yul\":10164:10170   */\n      dup3\n        /* \"#utility.yul\":10160:10174   */\n      add\n        /* \"#utility.yul\":10153:10211   */\n      mstore\n        /* \"#utility.yul\":10245:10262   */\n      0x61746572207468616e2031204554480000000000000000000000000000000000\n        /* \"#utility.yul\":10240:10242   */\n      0x20\n        /* \"#utility.yul\":10232:10238   */\n      dup3\n        /* \"#utility.yul\":10228:10243   */\n      add\n        /* \"#utility.yul\":10221:10263   */\n      mstore\n        /* \"#utility.yul\":10036:10270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10276:10642   */\n    tag_204:\n        /* \"#utility.yul\":10418:10421   */\n      0x00\n        /* \"#utility.yul\":10439:10506   */\n      tag_312\n        /* \"#utility.yul\":10503:10505   */\n      0x2f\n        /* \"#utility.yul\":10498:10501   */\n      dup4\n        /* \"#utility.yul\":10439:10506   */\n      tag_189\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10432:10506   */\n      swap2\n      pop\n        /* \"#utility.yul\":10515:10608   */\n      tag_313\n        /* \"#utility.yul\":10604:10607   */\n      dup3\n        /* \"#utility.yul\":10515:10608   */\n      tag_203\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10633:10635   */\n      0x40\n        /* \"#utility.yul\":10628:10631   */\n      dup3\n        /* \"#utility.yul\":10624:10636   */\n      add\n        /* \"#utility.yul\":10617:10636   */\n      swap1\n      pop\n        /* \"#utility.yul\":10276:10642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10648:11067   */\n    tag_105:\n        /* \"#utility.yul\":10814:10818   */\n      0x00\n        /* \"#utility.yul\":10852:10854   */\n      0x20\n        /* \"#utility.yul\":10841:10850   */\n      dup3\n        /* \"#utility.yul\":10837:10855   */\n      add\n        /* \"#utility.yul\":10829:10855   */\n      swap1\n      pop\n        /* \"#utility.yul\":10901:10910   */\n      dup2\n        /* \"#utility.yul\":10895:10899   */\n      dup2\n        /* \"#utility.yul\":10891:10911   */\n      sub\n        /* \"#utility.yul\":10887:10888   */\n      0x00\n        /* \"#utility.yul\":10876:10885   */\n      dup4\n        /* \"#utility.yul\":10872:10889   */\n      add\n        /* \"#utility.yul\":10865:10912   */\n      mstore\n        /* \"#utility.yul\":10929:11060   */\n      tag_315\n        /* \"#utility.yul\":11055:11059   */\n      dup2\n        /* \"#utility.yul\":10929:11060   */\n      tag_204\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10921:11060   */\n      swap1\n      pop\n        /* \"#utility.yul\":10648:11067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11073:11483   */\n    tag_111:\n        /* \"#utility.yul\":11113:11120   */\n      0x00\n        /* \"#utility.yul\":11136:11156   */\n      tag_317\n        /* \"#utility.yul\":11154:11155   */\n      dup3\n        /* \"#utility.yul\":11136:11156   */\n      tag_176\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11131:11156   */\n      swap2\n      pop\n        /* \"#utility.yul\":11170:11190   */\n      tag_318\n        /* \"#utility.yul\":11188:11189   */\n      dup4\n        /* \"#utility.yul\":11170:11190   */\n      tag_176\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11165:11190   */\n      swap3\n      pop\n        /* \"#utility.yul\":11225:11226   */\n      dup3\n        /* \"#utility.yul\":11222:11223   */\n      dup3\n        /* \"#utility.yul\":11218:11227   */\n      mul\n        /* \"#utility.yul\":11247:11277   */\n      tag_319\n        /* \"#utility.yul\":11265:11276   */\n      dup2\n        /* \"#utility.yul\":11247:11277   */\n      tag_176\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11236:11277   */\n      swap2\n      pop\n        /* \"#utility.yul\":11426:11427   */\n      dup3\n        /* \"#utility.yul\":11417:11424   */\n      dup3\n        /* \"#utility.yul\":11413:11428   */\n      div\n        /* \"#utility.yul\":11410:11411   */\n      dup5\n        /* \"#utility.yul\":11407:11429   */\n      eq\n        /* \"#utility.yul\":11387:11388   */\n      dup4\n        /* \"#utility.yul\":11380:11389   */\n      iszero\n        /* \"#utility.yul\":11360:11443   */\n      or\n        /* \"#utility.yul\":11337:11476   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":11456:11474   */\n      tag_321\n      tag_195\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":11337:11476   */\n    tag_320:\n        /* \"#utility.yul\":11121:11483   */\n      pop\n        /* \"#utility.yul\":11073:11483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11489:11663   */\n    tag_205:\n        /* \"#utility.yul\":11629:11655   */\n      0x496e76616c696420616d6f756e74206f66207368617265730000000000000000\n        /* \"#utility.yul\":11625:11626   */\n      0x00\n        /* \"#utility.yul\":11617:11623   */\n      dup3\n        /* \"#utility.yul\":11613:11627   */\n      add\n        /* \"#utility.yul\":11606:11656   */\n      mstore\n        /* \"#utility.yul\":11489:11663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11669:12035   */\n    tag_206:\n        /* \"#utility.yul\":11811:11814   */\n      0x00\n        /* \"#utility.yul\":11832:11899   */\n      tag_324\n        /* \"#utility.yul\":11896:11898   */\n      0x18\n        /* \"#utility.yul\":11891:11894   */\n      dup4\n        /* \"#utility.yul\":11832:11899   */\n      tag_189\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11825:11899   */\n      swap2\n      pop\n        /* \"#utility.yul\":11908:12001   */\n      tag_325\n        /* \"#utility.yul\":11997:12000   */\n      dup3\n        /* \"#utility.yul\":11908:12001   */\n      tag_205\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12026:12028   */\n      0x20\n        /* \"#utility.yul\":12021:12024   */\n      dup3\n        /* \"#utility.yul\":12017:12029   */\n      add\n        /* \"#utility.yul\":12010:12029   */\n      swap1\n      pop\n        /* \"#utility.yul\":11669:12035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12041:12460   */\n    tag_122:\n        /* \"#utility.yul\":12207:12211   */\n      0x00\n        /* \"#utility.yul\":12245:12247   */\n      0x20\n        /* \"#utility.yul\":12234:12243   */\n      dup3\n        /* \"#utility.yul\":12230:12248   */\n      add\n        /* \"#utility.yul\":12222:12248   */\n      swap1\n      pop\n        /* \"#utility.yul\":12294:12303   */\n      dup2\n        /* \"#utility.yul\":12288:12292   */\n      dup2\n        /* \"#utility.yul\":12284:12304   */\n      sub\n        /* \"#utility.yul\":12280:12281   */\n      0x00\n        /* \"#utility.yul\":12269:12278   */\n      dup4\n        /* \"#utility.yul\":12265:12282   */\n      add\n        /* \"#utility.yul\":12258:12305   */\n      mstore\n        /* \"#utility.yul\":12322:12453   */\n      tag_327\n        /* \"#utility.yul\":12448:12452   */\n      dup2\n        /* \"#utility.yul\":12322:12453   */\n      tag_206\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12314:12453   */\n      swap1\n      pop\n        /* \"#utility.yul\":12041:12460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12466:12755   */\n    tag_207:\n        /* \"#utility.yul\":12606:12640   */\n      0x506c6561736520617070726f76652074686520636f6e747261637420746f2064\n        /* \"#utility.yul\":12602:12603   */\n      0x00\n        /* \"#utility.yul\":12594:12600   */\n      dup3\n        /* \"#utility.yul\":12590:12604   */\n      add\n        /* \"#utility.yul\":12583:12641   */\n      mstore\n        /* \"#utility.yul\":12675:12709   */\n      0x6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c65\n        /* \"#utility.yul\":12670:12672   */\n      0x20\n        /* \"#utility.yul\":12662:12668   */\n      dup3\n        /* \"#utility.yul\":12658:12673   */\n      add\n        /* \"#utility.yul\":12651:12710   */\n      mstore\n        /* \"#utility.yul\":12744:12747   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12739:12741   */\n      0x40\n        /* \"#utility.yul\":12731:12737   */\n      dup3\n        /* \"#utility.yul\":12727:12742   */\n      add\n        /* \"#utility.yul\":12720:12748   */\n      mstore\n        /* \"#utility.yul\":12466:12755   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12761:13127   */\n    tag_208:\n        /* \"#utility.yul\":12903:12906   */\n      0x00\n        /* \"#utility.yul\":12924:12991   */\n      tag_330\n        /* \"#utility.yul\":12988:12990   */\n      0x41\n        /* \"#utility.yul\":12983:12986   */\n      dup4\n        /* \"#utility.yul\":12924:12991   */\n      tag_189\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":12917:12991   */\n      swap2\n      pop\n        /* \"#utility.yul\":13000:13093   */\n      tag_331\n        /* \"#utility.yul\":13089:13092   */\n      dup3\n        /* \"#utility.yul\":13000:13093   */\n      tag_207\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13118:13120   */\n      0x60\n        /* \"#utility.yul\":13113:13116   */\n      dup3\n        /* \"#utility.yul\":13109:13121   */\n      add\n        /* \"#utility.yul\":13102:13121   */\n      swap1\n      pop\n        /* \"#utility.yul\":12761:13127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13133:13552   */\n    tag_129:\n        /* \"#utility.yul\":13299:13303   */\n      0x00\n        /* \"#utility.yul\":13337:13339   */\n      0x20\n        /* \"#utility.yul\":13326:13335   */\n      dup3\n        /* \"#utility.yul\":13322:13340   */\n      add\n        /* \"#utility.yul\":13314:13340   */\n      swap1\n      pop\n        /* \"#utility.yul\":13386:13395   */\n      dup2\n        /* \"#utility.yul\":13380:13384   */\n      dup2\n        /* \"#utility.yul\":13376:13396   */\n      sub\n        /* \"#utility.yul\":13372:13373   */\n      0x00\n        /* \"#utility.yul\":13361:13370   */\n      dup4\n        /* \"#utility.yul\":13357:13374   */\n      add\n        /* \"#utility.yul\":13350:13397   */\n      mstore\n        /* \"#utility.yul\":13414:13545   */\n      tag_333\n        /* \"#utility.yul\":13540:13544   */\n      dup2\n        /* \"#utility.yul\":13414:13545   */\n      tag_208\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":13406:13545   */\n      swap1\n      pop\n        /* \"#utility.yul\":13133:13552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13558:13723   */\n    tag_209:\n        /* \"#utility.yul\":13698:13715   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":13694:13695   */\n      0x00\n        /* \"#utility.yul\":13686:13692   */\n      dup3\n        /* \"#utility.yul\":13682:13696   */\n      add\n        /* \"#utility.yul\":13675:13716   */\n      mstore\n        /* \"#utility.yul\":13558:13723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13729:14095   */\n    tag_210:\n        /* \"#utility.yul\":13871:13874   */\n      0x00\n        /* \"#utility.yul\":13892:13959   */\n      tag_336\n        /* \"#utility.yul\":13956:13958   */\n      0x0f\n        /* \"#utility.yul\":13951:13954   */\n      dup4\n        /* \"#utility.yul\":13892:13959   */\n      tag_189\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13885:13959   */\n      swap2\n      pop\n        /* \"#utility.yul\":13968:14061   */\n      tag_337\n        /* \"#utility.yul\":14057:14060   */\n      dup3\n        /* \"#utility.yul\":13968:14061   */\n      tag_209\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":14086:14088   */\n      0x20\n        /* \"#utility.yul\":14081:14084   */\n      dup3\n        /* \"#utility.yul\":14077:14089   */\n      add\n        /* \"#utility.yul\":14070:14089   */\n      swap1\n      pop\n        /* \"#utility.yul\":13729:14095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14101:14520   */\n    tag_144:\n        /* \"#utility.yul\":14267:14271   */\n      0x00\n        /* \"#utility.yul\":14305:14307   */\n      0x20\n        /* \"#utility.yul\":14294:14303   */\n      dup3\n        /* \"#utility.yul\":14290:14308   */\n      add\n        /* \"#utility.yul\":14282:14308   */\n      swap1\n      pop\n        /* \"#utility.yul\":14354:14363   */\n      dup2\n        /* \"#utility.yul\":14348:14352   */\n      dup2\n        /* \"#utility.yul\":14344:14364   */\n      sub\n        /* \"#utility.yul\":14340:14341   */\n      0x00\n        /* \"#utility.yul\":14329:14338   */\n      dup4\n        /* \"#utility.yul\":14325:14342   */\n      add\n        /* \"#utility.yul\":14318:14365   */\n      mstore\n        /* \"#utility.yul\":14382:14513   */\n      tag_339\n        /* \"#utility.yul\":14508:14512   */\n      dup2\n        /* \"#utility.yul\":14382:14513   */\n      tag_210\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":14374:14513   */\n      swap1\n      pop\n        /* \"#utility.yul\":14101:14520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122019f2cb67aba94b5978dc546e863147d77306cc3ce0a70115bb1b21c35ef2159f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_605": {
									"entryPoint": null,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200167f3803806200167f8339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b611555806200012a6000396000f3fe60806040526004361061007b5760003560e01c8063bec3fa171161004e578063bec3fa17146100fa578063eb521a4c14610123578063f4325d671461013f578063ff9b37581461016a5761007b565b80637464fc3d146100805780638e3073a6146100ab5780638ef85568146100d457806394b918de146100de575b600080fd5b34801561008c57600080fd5b50610095610193565b6040516100a29190610dc6565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610e12565b610199565b005b6100dc610492565b005b6100f860048036038101906100f39190610e12565b61063a565b005b34801561010657600080fd5b50610121600480360381019061011c9190610e9d565b61065d565b005b61013d60048036038101906101389190610e12565b6106f4565b005b34801561014b57600080fd5b506101546108ca565b6040516101619190610eec565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c9190610e12565b6108ee565b005b60015481565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101f5929190610f07565b602060405180830381865afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610f45565b1015610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e90610fcf565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102d493929190610fef565b6020604051808303816000875af11580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610317919061105e565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103749190610eec565b602060405180830381865afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b59190610f45565b90506000816001546103c791906110e9565b476103d2919061111a565b90508047116103e057600080fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516104069061117f565b60006040518083038185875af1925050503d8060008114610443576040519150601f19603f3d011682016040523d82523d6000602084013e610448565b606091505b505090508061048c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610483906111e0565b60405180910390fd5b50505050565b600034116104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc90611272565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105319190610eec565b602060405180830381865afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610f45565b9050600047905060008160015461058991906110e9565b83610594919061111a565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105f1929190611292565b6020604051808303816000875af1158015610610573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610634919061105e565b50505050565b60003411156106505761064b610492565b61065a565b61065981610199565b5b50565b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106ac929190611292565b6020604051808303816000875af11580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef919061105e565b505050565b662386f26fc1000081101561073e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107359061132d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161079b93929190610fef565b6020604051808303816000875af11580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de919061105e565b5047816107eb919061134d565b6001819055507339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361082d600154610be7565b6040518363ffffffff1660e01b815260040161084a929190611292565b6020604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d919061105e565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516108bf929190611292565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610928906113db565b60405180910390fd5b807339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610981929190610f07565b602060405180830381865afa15801561099e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c29190610f45565b1015610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa90611493565b60405180910390fd5b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a5493929190610fef565b6020604051808303816000875af1158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a97919061105e565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610af3929190611292565b6020604051808303816000875af1158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b36919061105e565b5060003373ffffffffffffffffffffffffffffffffffffffff1682604051610b5d9061117f565b60006040518083038185875af1925050503d8060008114610b9a576040519150601f19603f3d011682016040523d82523d6000602084013e610b9f565b606091505b5050905080610be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bda906114ff565b60405180910390fd5b5050565b6000808203610bf95760009050610d8f565b60006001905060008390506000608082901c1115610c2057608081901c9050604082901b91505b6000604082901c1115610c3c57604081901c9050602082901b91505b6000602082901c1115610c5857602081901c9050601082901b91505b6000601082901c1115610c7457601081901c9050600882901b91505b6000600882901c1115610c9057600881901c9050600482901b91505b6000600482901c1115610cac57600481901c9050600282901b91505b6000600282901c1115610cc157600182901b91505b6001828581610cd357610cd261108b565b5b048301901c91506001828581610cec57610ceb61108b565b5b048301901c91506001828581610d0557610d0461108b565b5b048301901c91506001828581610d1e57610d1d61108b565b5b048301901c91506001828581610d3757610d3661108b565b5b048301901c91506001828581610d5057610d4f61108b565b5b048301901c91506001828581610d6957610d6861108b565b5b048301901c9150610d8a82838681610d8457610d8361108b565b5b04610d94565b925050505b919050565b6000818310610da35781610da5565b825b905092915050565b6000819050919050565b610dc081610dad565b82525050565b6000602082019050610ddb6000830184610db7565b92915050565b600080fd5b610def81610dad565b8114610dfa57600080fd5b50565b600081359050610e0c81610de6565b92915050565b600060208284031215610e2857610e27610de1565b5b6000610e3684828501610dfd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6a82610e3f565b9050919050565b610e7a81610e5f565b8114610e8557600080fd5b50565b600081359050610e9781610e71565b92915050565b60008060408385031215610eb457610eb3610de1565b5b6000610ec285828601610e88565b9250506020610ed385828601610dfd565b9150509250929050565b610ee681610e5f565b82525050565b6000602082019050610f016000830184610edd565b92915050565b6000604082019050610f1c6000830185610edd565b610f296020830184610edd565b9392505050565b600081519050610f3f81610de6565b92915050565b600060208284031215610f5b57610f5a610de1565b5b6000610f6984828501610f30565b91505092915050565b600082825260208201905092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6000610fb9601583610f72565b9150610fc482610f83565b602082019050919050565b60006020820190508181036000830152610fe881610fac565b9050919050565b60006060820190506110046000830186610edd565b6110116020830185610edd565b61101e6040830184610db7565b949350505050565b60008115159050919050565b61103b81611026565b811461104657600080fd5b50565b60008151905061105881611032565b92915050565b60006020828403121561107457611073610de1565b5b600061108284828501611049565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110f482610dad565b91506110ff83610dad565b92508261110f5761110e61108b565b5b828204905092915050565b600061112582610dad565b915061113083610dad565b9250828203905081811115611148576111476110ba565b5b92915050565b600081905092915050565b50565b600061116960008361114e565b915061117482611159565b600082019050919050565b600061118a8261115c565b9150819050919050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b60006111ca600f83610f72565b91506111d582611194565b602082019050919050565b600060208201905081810360008301526111f9816111bd565b9050919050565b7f5468652065746820616d6f756e7420737570706c696564206d7573742062652060008201527f67726561746572207468616e2030000000000000000000000000000000000000602082015250565b600061125c602e83610f72565b915061126782611200565b604082019050919050565b6000602082019050818103600083015261128b8161124f565b9050919050565b60006040820190506112a76000830185610edd565b6112b46020830184610db7565b9392505050565b7f4c69717569646974792070726f76696465642073686f756c642062652067726560008201527f61746572207468616e2031204554480000000000000000000000000000000000602082015250565b6000611317602f83610f72565b9150611322826112bb565b604082019050919050565b600060208201905081810360008301526113468161130a565b9050919050565b600061135882610dad565b915061136383610dad565b925082820261137181610dad565b91508282048414831517611388576113876110ba565b5b5092915050565b7f496e76616c696420616d6f756e74206f66207368617265730000000000000000600082015250565b60006113c5601883610f72565b91506113d08261138f565b602082019050919050565b600060208201905081810360008301526113f4816113b8565b9050919050565b7f506c6561736520617070726f76652074686520636f6e747261637420746f206460008201527f6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6560208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b600061147d604183610f72565b9150611488826113fb565b606082019050919050565b600060208201905081810360008301526114ac81611470565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006114e9600f83610f72565b91506114f4826114b3565b602082019050919050565b60006020820190508181036000830152611518816114dc565b905091905056fea264697066735822122019f2cb67aba94b5978dc546e863147d77306cc3ce0a70115bb1b21c35ef2159f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x167F CODESIZE SUB DUP1 PUSH3 0x167F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0xE8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x11A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB0 DUP3 PUSH3 0x83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC2 DUP2 PUSH3 0xA3 JUMP JUMPDEST DUP2 EQ PUSH3 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE2 DUP2 PUSH3 0xB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH3 0x100 PUSH3 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x111 DUP5 DUP3 DUP6 ADD PUSH3 0xD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1555 DUP1 PUSH3 0x12A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEC3FA17 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xFF9B3758 EQ PUSH2 0x16A JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8E3073A6 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8EF85568 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x492 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP3 SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST LT ISZERO PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SELFBALANCE PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE GT PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x406 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x448 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP4 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x610 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x650 JUMPI PUSH2 0x64B PUSH2 0x492 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0x199 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x735 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP SELFBALANCE DUP2 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x82D PUSH1 0x1 SLOAD PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BF SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP3 SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xBF9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC58 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC74 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD1E JUMPI PUSH2 0xD1D PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD50 JUMPI PUSH2 0xD4F PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xD8A DUP3 DUP4 DUP7 DUP2 PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV PUSH2 0xD94 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xDA3 JUMPI DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDEF DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP2 EQ PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0C DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE36 DUP5 DUP3 DUP6 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP3 PUSH2 0xE3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7A DUP2 PUSH2 0xE5F JUMP JUMPDEST DUP2 EQ PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE97 DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP6 DUP3 DUP7 ADD PUSH2 0xE88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED3 DUP6 DUP3 DUP7 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0xE5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xF29 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3F DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF69 DUP5 DUP3 DUP6 ADD PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 PUSH1 0x15 DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC4 DUP3 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFE8 DUP2 PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1004 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x1011 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x101E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103B DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP2 EQ PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1058 DUP2 PUSH2 0x1032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH2 0x1073 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1082 DUP5 DUP3 DUP6 ADD PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10F4 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP PUSH2 0x10FF DUP4 PUSH2 0xDAD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x110F JUMPI PUSH2 0x110E PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1130 DUP4 PUSH2 0xDAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1148 JUMPI PUSH2 0x1147 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0x0 DUP4 PUSH2 0x114E JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118A DUP3 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CA PUSH1 0xF DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 DUP3 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F9 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652065746820616D6F756E7420737570706C696564206D75737420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125C PUSH1 0x2E DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1267 DUP3 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x128B DUP2 PUSH2 0x124F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x12B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4C69717569646974792070726F76696465642073686F756C6420626520677265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2031204554480000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1317 PUSH1 0x2F DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1322 DUP3 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1346 DUP2 PUSH2 0x130A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1358 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1363 DUP4 PUSH2 0xDAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1371 DUP2 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74206F66207368617265730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C5 PUSH1 0x18 DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F4 DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520617070726F76652074686520636F6E747261637420746F2064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147D PUSH1 0x41 DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1488 DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14AC DUP2 PUSH2 0x1470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E9 PUSH1 0xF DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F4 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1518 DUP2 PUSH2 0x14DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT CALLCODE 0xCB PUSH8 0xABA94B5978DC546E DUP7 BALANCE SELFBALANCE 0xD7 PUSH20 0x6CC3CE0A70115BB1B21C35EF2159F64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "622:2825:2:-:0;;;930:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;989:13;974:12;;:28;;;;;;;;;;;;;;;;;;930:79;622:2825;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;622:2825:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getDAI_875": {
									"entryPoint": 1170,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getEth_826": {
									"entryPoint": 409,
									"id": 826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@kLast_595": {
									"entryPoint": 403,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_42": {
									"entryPoint": 3476,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@provideLiquidity_665": {
									"entryPoint": 1780,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reedemShares_735": {
									"entryPoint": 2286,
									"id": 735,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reserveToken_587": {
									"entryPoint": 2250,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_466": {
									"entryPoint": 3047,
									"id": 466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_911": {
									"entryPoint": 1594,
									"id": 911,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_891": {
									"entryPoint": 1629,
									"id": 891,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3847,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c": {
									"entryPoint": 5007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9": {
									"entryPoint": 4608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f": {
									"entryPoint": 4500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14523:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:3"
															},
															"nodeType": "YulIf",
															"src": "822:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:3",
														"type": ""
													}
												],
												"src": "769:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:3",
														"type": ""
													}
												],
												"src": "897:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:3"
															},
															"nodeType": "YulIf",
															"src": "1118:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:3",
														"type": ""
													}
												],
												"src": "1042:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2013:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:32:3"
															},
															"nodeType": "YulIf",
															"src": "1977:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2106:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2150:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2233:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2278:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1929:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1940:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1952:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1960:6:3",
														"type": ""
													}
												],
												"src": "1884:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2429:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2417:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2424:3:3",
														"type": ""
													}
												],
												"src": "2364:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2581:4:3",
														"type": ""
													}
												],
												"src": "2488:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2842:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2852:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2864:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2860:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2852:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2932:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2945:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2956:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2941:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2888:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2888:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3013:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3026:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3037:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3022:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3022:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2969:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2806:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2818:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2826:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2837:4:3",
														"type": ""
													}
												],
												"src": "2716:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3117:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3127:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3142:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3136:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3136:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3127:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3185:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3158:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3095:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3103:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3111:5:3",
														"type": ""
													}
												],
												"src": "3054:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3280:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3326:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3328:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3328:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3328:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3301:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3297:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3322:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3293:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:32:3"
															},
															"nodeType": "YulIf",
															"src": "3290:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3419:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3434:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3448:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3438:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3463:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3509:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3520:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3505:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3505:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3529:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3473:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3463:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3261:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3273:6:3",
														"type": ""
													}
												],
												"src": "3203:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3656:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3673:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3678:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3694:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3713:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3718:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3709:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3694:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3628:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3633:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3644:11:3",
														"type": ""
													}
												],
												"src": "3560:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3841:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3863:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3871:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:14:3"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3875:23:3",
																		"type": "",
																		"value": "Contract not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3852:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3852:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3833:6:3",
														"type": ""
													}
												],
												"src": "3735:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4058:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4068:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4075:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4068:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4240:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																	"nodeType": "YulIdentifier",
																	"src": "4151:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4151:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4253:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4264:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4269:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4260:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4046:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4054:3:3",
														"type": ""
													}
												],
												"src": "3912:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4455:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4465:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4523:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4508:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4508:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4531:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4537:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4527:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4501:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4501:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4557:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4691:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4565:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4557:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4435:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4450:4:3",
														"type": ""
													}
												],
												"src": "4284:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4863:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4873:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4885:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4896:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4881:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4881:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4873:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4966:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4977:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4962:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4962:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4909:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4909:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4909:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5034:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5047:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5058:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4990:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4990:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5116:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5129:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5140:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5072:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5072:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5072:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4819:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4831:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4839:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4847:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4858:4:3",
														"type": ""
													}
												],
												"src": "4709:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5199:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5209:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5234:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5227:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5227:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5209:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5181:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5191:7:3",
														"type": ""
													}
												],
												"src": "5157:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5347:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5356:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5359:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5349:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5349:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5349:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5316:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5338:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5323:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5323:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5313:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5313:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5306:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:40:3"
															},
															"nodeType": "YulIf",
															"src": "5303:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5286:5:3",
														"type": ""
													}
												],
												"src": "5253:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5435:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5445:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5460:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5454:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5445:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5500:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5476:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5476:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5413:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5421:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5429:5:3",
														"type": ""
													}
												],
												"src": "5375:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5592:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5638:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5640:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5640:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5613:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5622:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5609:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5609:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5634:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5605:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5605:32:3"
															},
															"nodeType": "YulIf",
															"src": "5602:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5731:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5746:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5760:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5750:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5775:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5818:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5829:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5814:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5814:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5838:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5785:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5785:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5775:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5562:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5573:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5585:6:3",
														"type": ""
													}
												],
												"src": "5518:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5897:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5914:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5917:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5907:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5907:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6011:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6014:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6004:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6004:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6035:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6038:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5869:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6083:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6100:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6103:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6093:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6093:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6197:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6200:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6190:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6224:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6214:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6214:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6055:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6283:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6293:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6316:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6298:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6298:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6293:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6327:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6350:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6332:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6332:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6327:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6374:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6376:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6376:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6376:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6371:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:9:3"
															},
															"nodeType": "YulIf",
															"src": "6361:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6406:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6415:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6418:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6411:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6411:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6406:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6272:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6275:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6281:1:3",
														"type": ""
													}
												],
												"src": "6241:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6477:149:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6487:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6510:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6492:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6492:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6487:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6544:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6526:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6526:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6521:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6555:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6567:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6570:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6563:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6563:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6555:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6597:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6599:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6599:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6599:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6588:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6594:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6585:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:11:3"
															},
															"nodeType": "YulIf",
															"src": "6582:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6463:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6466:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6472:4:3",
														"type": ""
													}
												],
												"src": "6432:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6745:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6755:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6770:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6755:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6717:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6722:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6733:11:3",
														"type": ""
													}
												],
												"src": "6632:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6891:8:3",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6883:6:3",
														"type": ""
													}
												],
												"src": "6785:114:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7068:235:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7078:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7085:75:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7085:83:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7078:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7266:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "7177:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7177:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7177:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7279:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7290:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7295:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7286:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7279:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7056:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7064:3:3",
														"type": ""
													}
												],
												"src": "6905:398:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7497:191:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7508:154:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7658:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7515:141:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:147:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7672:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7679:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7672:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7484:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7493:3:3",
														"type": ""
													}
												],
												"src": "7309:379:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7800:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7822:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7830:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7818:14:3"
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7834:17:3",
																		"type": "",
																		"value": "Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7811:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7811:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7811:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7792:6:3",
														"type": ""
													}
												],
												"src": "7694:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8011:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8021:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8087:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8092:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8028:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8028:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8021:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8193:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																	"nodeType": "YulIdentifier",
																	"src": "8104:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8104:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8104:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8206:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8217:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8222:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8213:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8206:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7999:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8007:3:3",
														"type": ""
													}
												],
												"src": "7865:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8408:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8418:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8430:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8426:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8418:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8465:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8476:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8461:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8461:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8484:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8490:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8480:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8454:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8454:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8454:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8510:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8644:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8518:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8518:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8510:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8388:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8403:4:3",
														"type": ""
													}
												],
												"src": "8237:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8768:127:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8790:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8798:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:14:3"
																	},
																	{
																		"hexValue": "5468652065746820616d6f756e7420737570706c696564206d75737420626520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8802:34:3",
																		"type": "",
																		"value": "The eth amount supplied must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8779:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8858:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8866:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8854:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8854:15:3"
																	},
																	{
																		"hexValue": "67726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8871:16:3",
																		"type": "",
																		"value": "greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8847:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8847:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8760:6:3",
														"type": ""
													}
												],
												"src": "8662:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9047:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9057:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9123:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9128:2:3",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9064:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9057:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9229:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
																	"nodeType": "YulIdentifier",
																	"src": "9140:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9140:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9242:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9253:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9258:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9249:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9035:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9043:3:3",
														"type": ""
													}
												],
												"src": "8901:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9444:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9454:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9466:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9477:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9462:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9462:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9454:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9512:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9497:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9520:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9526:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9516:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9516:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9490:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9490:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9490:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9546:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9680:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9554:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9554:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9546:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9424:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9439:4:3",
														"type": ""
													}
												],
												"src": "9273:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9824:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9834:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9846:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9857:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9842:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9834:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9914:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9927:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9923:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9923:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9870:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9870:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9870:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9995:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10008:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10019:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10004:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10004:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9951:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9951:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9788:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9800:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9808:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9819:4:3",
														"type": ""
													}
												],
												"src": "9698:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10142:128:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10164:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10172:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10160:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10160:14:3"
																	},
																	{
																		"hexValue": "4c69717569646974792070726f76696465642073686f756c6420626520677265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10176:34:3",
																		"type": "",
																		"value": "Liquidity provided should be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10153:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10153:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10153:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10232:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10240:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10228:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10228:15:3"
																	},
																	{
																		"hexValue": "61746572207468616e203120455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10245:17:3",
																		"type": "",
																		"value": "ater than 1 ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10221:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10134:6:3",
														"type": ""
													}
												],
												"src": "10036:234:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10422:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10432:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10498:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10503:2:3",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10439:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10432:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10604:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
																	"nodeType": "YulIdentifier",
																	"src": "10515:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10515:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10515:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10617:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10628:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10633:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10624:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10624:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10617:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10410:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10418:3:3",
														"type": ""
													}
												],
												"src": "10276:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10819:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10829:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10841:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10852:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10837:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10837:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10829:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10876:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10887:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10872:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10872:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10895:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10901:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10891:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10891:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10865:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10865:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10921:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11055:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10929:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10921:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10799:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10814:4:3",
														"type": ""
													}
												],
												"src": "10648:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11121:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11131:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11154:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11136:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11136:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11131:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11165:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11188:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11170:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11170:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11165:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11199:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11222:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11225:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11218:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11218:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11203:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11236:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11265:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11247:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11247:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11236:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11454:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11456:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11456:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11456:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11387:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11380:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11380:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11410:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11417:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11426:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11413:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11413:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11407:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11407:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11360:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11360:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11340:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11340:113:3"
															},
															"nodeType": "YulIf",
															"src": "11337:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11104:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11107:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11113:7:3",
														"type": ""
													}
												],
												"src": "11073:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11595:68:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11617:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11625:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11613:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11613:14:3"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74206f6620736861726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11629:26:3",
																		"type": "",
																		"value": "Invalid amount of shares"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11606:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11606:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11606:50:3"
														}
													]
												},
												"name": "store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11587:6:3",
														"type": ""
													}
												],
												"src": "11489:174:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11815:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11825:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11891:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11896:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11832:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11832:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11825:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11997:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																	"nodeType": "YulIdentifier",
																	"src": "11908:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11908:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11908:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12010:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12021:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12026:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12017:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12017:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12010:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11803:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11811:3:3",
														"type": ""
													}
												],
												"src": "11669:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12212:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12222:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12234:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12245:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12230:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12230:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12222:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12269:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12280:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12265:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12265:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12288:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12294:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12284:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12284:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12258:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12258:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12258:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12314:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12448:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12322:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12322:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12314:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12192:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12207:4:3",
														"type": ""
													}
												],
												"src": "12041:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12572:183:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12594:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12602:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12590:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12590:14:3"
																	},
																	{
																		"hexValue": "506c6561736520617070726f76652074686520636f6e747261637420746f2064",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12606:34:3",
																		"type": "",
																		"value": "Please approve the contract to d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12583:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12583:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12583:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12662:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12670:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12658:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12658:15:3"
																	},
																	{
																		"hexValue": "6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12675:34:3",
																		"type": "",
																		"value": "educt ltr tokens from your walle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12651:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12651:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12651:59:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12731:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12739:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12727:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12727:15:3"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12744:3:3",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12720:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12720:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12720:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12564:6:3",
														"type": ""
													}
												],
												"src": "12466:289:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12907:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12917:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12983:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12988:2:3",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12924:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12924:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12917:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13089:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																	"nodeType": "YulIdentifier",
																	"src": "13000:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13000:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13000:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13102:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13113:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13118:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13109:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13109:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13102:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12895:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12903:3:3",
														"type": ""
													}
												],
												"src": "12761:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13304:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13314:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13326:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13337:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13322:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13322:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13314:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13361:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13372:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13357:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13357:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13380:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13386:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13376:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13350:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13350:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13350:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13406:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13540:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13414:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13414:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13406:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13284:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13299:4:3",
														"type": ""
													}
												],
												"src": "13133:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13664:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13686:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13694:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13682:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13682:14:3"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13698:17:3",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13675:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13675:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13675:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13656:6:3",
														"type": ""
													}
												],
												"src": "13558:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13875:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13885:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13951:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13956:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13892:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13892:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13885:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14057:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "13968:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13968:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13968:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14070:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14081:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14086:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14077:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14077:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14070:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13863:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13871:3:3",
														"type": ""
													}
												],
												"src": "13729:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14272:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14282:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14294:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14305:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14290:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14282:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14329:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14340:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14325:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14325:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14348:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14354:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14344:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14344:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14318:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14318:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14374:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14508:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14382:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14382:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14374:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14252:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14267:4:3",
														"type": ""
													}
												],
												"src": "14101:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"The eth amount supplied must be \")\n\n        mstore(add(memPtr, 32), \"greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity provided should be gre\")\n\n        mstore(add(memPtr, 32), \"ater than 1 ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount of shares\")\n\n    }\n\n    function abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please approve the contract to d\")\n\n        mstore(add(memPtr, 32), \"educt ltr tokens from your walle\")\n\n        mstore(add(memPtr, 64), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 65)\n        store_literal_in_memory_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c8063bec3fa171161004e578063bec3fa17146100fa578063eb521a4c14610123578063f4325d671461013f578063ff9b37581461016a5761007b565b80637464fc3d146100805780638e3073a6146100ab5780638ef85568146100d457806394b918de146100de575b600080fd5b34801561008c57600080fd5b50610095610193565b6040516100a29190610dc6565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610e12565b610199565b005b6100dc610492565b005b6100f860048036038101906100f39190610e12565b61063a565b005b34801561010657600080fd5b50610121600480360381019061011c9190610e9d565b61065d565b005b61013d60048036038101906101389190610e12565b6106f4565b005b34801561014b57600080fd5b506101546108ca565b6040516101619190610eec565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c9190610e12565b6108ee565b005b60015481565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016101f5929190610f07565b602060405180830381865afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610f45565b1015610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e90610fcf565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102d493929190610fef565b6020604051808303816000875af11580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610317919061105e565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103749190610eec565b602060405180830381865afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b59190610f45565b90506000816001546103c791906110e9565b476103d2919061111a565b90508047116103e057600080fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516104069061117f565b60006040518083038185875af1925050503d8060008114610443576040519150601f19603f3d011682016040523d82523d6000602084013e610448565b606091505b505090508061048c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610483906111e0565b60405180910390fd5b50505050565b600034116104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc90611272565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105319190610eec565b602060405180830381865afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610f45565b9050600047905060008160015461058991906110e9565b83610594919061111a565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105f1929190611292565b6020604051808303816000875af1158015610610573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610634919061105e565b50505050565b60003411156106505761064b610492565b61065a565b61065981610199565b5b50565b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016106ac929190611292565b6020604051808303816000875af11580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef919061105e565b505050565b662386f26fc1000081101561073e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107359061132d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161079b93929190610fef565b6020604051808303816000875af11580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de919061105e565b5047816107eb919061134d565b6001819055507339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361082d600154610be7565b6040518363ffffffff1660e01b815260040161084a929190611292565b6020604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d919061105e565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516108bf929190611292565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610928906113db565b60405180910390fd5b807339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610981929190610f07565b602060405180830381865afa15801561099e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c29190610f45565b1015610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa90611493565b60405180910390fd5b7339db207dff3411f4fab0483d419306873cbc13d973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a5493929190610fef565b6020604051808303816000875af1158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a97919061105e565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610af3929190611292565b6020604051808303816000875af1158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b36919061105e565b5060003373ffffffffffffffffffffffffffffffffffffffff1682604051610b5d9061117f565b60006040518083038185875af1925050503d8060008114610b9a576040519150601f19603f3d011682016040523d82523d6000602084013e610b9f565b606091505b5050905080610be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bda906114ff565b60405180910390fd5b5050565b6000808203610bf95760009050610d8f565b60006001905060008390506000608082901c1115610c2057608081901c9050604082901b91505b6000604082901c1115610c3c57604081901c9050602082901b91505b6000602082901c1115610c5857602081901c9050601082901b91505b6000601082901c1115610c7457601081901c9050600882901b91505b6000600882901c1115610c9057600881901c9050600482901b91505b6000600482901c1115610cac57600481901c9050600282901b91505b6000600282901c1115610cc157600182901b91505b6001828581610cd357610cd261108b565b5b048301901c91506001828581610cec57610ceb61108b565b5b048301901c91506001828581610d0557610d0461108b565b5b048301901c91506001828581610d1e57610d1d61108b565b5b048301901c91506001828581610d3757610d3661108b565b5b048301901c91506001828581610d5057610d4f61108b565b5b048301901c91506001828581610d6957610d6861108b565b5b048301901c9150610d8a82838681610d8457610d8361108b565b5b04610d94565b925050505b919050565b6000818310610da35781610da5565b825b905092915050565b6000819050919050565b610dc081610dad565b82525050565b6000602082019050610ddb6000830184610db7565b92915050565b600080fd5b610def81610dad565b8114610dfa57600080fd5b50565b600081359050610e0c81610de6565b92915050565b600060208284031215610e2857610e27610de1565b5b6000610e3684828501610dfd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6a82610e3f565b9050919050565b610e7a81610e5f565b8114610e8557600080fd5b50565b600081359050610e9781610e71565b92915050565b60008060408385031215610eb457610eb3610de1565b5b6000610ec285828601610e88565b9250506020610ed385828601610dfd565b9150509250929050565b610ee681610e5f565b82525050565b6000602082019050610f016000830184610edd565b92915050565b6000604082019050610f1c6000830185610edd565b610f296020830184610edd565b9392505050565b600081519050610f3f81610de6565b92915050565b600060208284031215610f5b57610f5a610de1565b5b6000610f6984828501610f30565b91505092915050565b600082825260208201905092915050565b7f436f6e7472616374206e6f7420617070726f7665640000000000000000000000600082015250565b6000610fb9601583610f72565b9150610fc482610f83565b602082019050919050565b60006020820190508181036000830152610fe881610fac565b9050919050565b60006060820190506110046000830186610edd565b6110116020830185610edd565b61101e6040830184610db7565b949350505050565b60008115159050919050565b61103b81611026565b811461104657600080fd5b50565b60008151905061105881611032565b92915050565b60006020828403121561107457611073610de1565b5b600061108284828501611049565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110f482610dad565b91506110ff83610dad565b92508261110f5761110e61108b565b5b828204905092915050565b600061112582610dad565b915061113083610dad565b9250828203905081811115611148576111476110ba565b5b92915050565b600081905092915050565b50565b600061116960008361114e565b915061117482611159565b600082019050919050565b600061118a8261115c565b9150819050919050565b7f5472616e73666572204661696c65640000000000000000000000000000000000600082015250565b60006111ca600f83610f72565b91506111d582611194565b602082019050919050565b600060208201905081810360008301526111f9816111bd565b9050919050565b7f5468652065746820616d6f756e7420737570706c696564206d7573742062652060008201527f67726561746572207468616e2030000000000000000000000000000000000000602082015250565b600061125c602e83610f72565b915061126782611200565b604082019050919050565b6000602082019050818103600083015261128b8161124f565b9050919050565b60006040820190506112a76000830185610edd565b6112b46020830184610db7565b9392505050565b7f4c69717569646974792070726f76696465642073686f756c642062652067726560008201527f61746572207468616e2031204554480000000000000000000000000000000000602082015250565b6000611317602f83610f72565b9150611322826112bb565b604082019050919050565b600060208201905081810360008301526113468161130a565b9050919050565b600061135882610dad565b915061136383610dad565b925082820261137181610dad565b91508282048414831517611388576113876110ba565b5b5092915050565b7f496e76616c696420616d6f756e74206f66207368617265730000000000000000600082015250565b60006113c5601883610f72565b91506113d08261138f565b602082019050919050565b600060208201905081810360008301526113f4816113b8565b9050919050565b7f506c6561736520617070726f76652074686520636f6e747261637420746f206460008201527f6564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6560208201527f7400000000000000000000000000000000000000000000000000000000000000604082015250565b600061147d604183610f72565b9150611488826113fb565b606082019050919050565b600060208201905081810360008301526114ac81611470565b9050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006114e9600f83610f72565b91506114f4826114b3565b602082019050919050565b60006020820190508181036000830152611518816114dc565b905091905056fea264697066735822122019f2cb67aba94b5978dc546e863147d77306cc3ce0a70115bb1b21c35ef2159f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBEC3FA17 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xFF9B3758 EQ PUSH2 0x16A JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8E3073A6 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8EF85568 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x492 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x154 PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x161 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x8EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP3 SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST LT ISZERO PUSH2 0x277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SELFBALANCE PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE GT PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x406 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x448 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP4 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x610 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x650 JUMPI PUSH2 0x64B PUSH2 0x492 JUMP JUMPDEST PUSH2 0x65A JUMP JUMPDEST PUSH2 0x659 DUP2 PUSH2 0x199 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AC SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 LT ISZERO PUSH2 0x73E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x735 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DE SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP SELFBALANCE DUP2 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH2 0x82D PUSH1 0x1 SLOAD PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84A SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BF SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP3 SWAP2 SWAP1 PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0x39DB207DFF3411F4FAB0483D419306873CBC13D9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF3 SWAP3 SWAP2 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0xBF9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x80 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x40 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x40 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x20 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC58 JUMPI PUSH1 0x20 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x10 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC74 JUMPI PUSH1 0x10 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x8 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x8 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x4 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x4 DUP2 SWAP1 SHR SWAP1 POP PUSH1 0x2 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 SWAP1 SHR GT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x1 DUP3 SWAP1 SHL SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD1E JUMPI PUSH2 0xD1D PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD50 JUMPI PUSH2 0xD4F PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH1 0x1 DUP3 DUP6 DUP2 PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV DUP4 ADD SWAP1 SHR SWAP2 POP PUSH2 0xD8A DUP3 DUP4 DUP7 DUP2 PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DIV PUSH2 0xD94 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xDA3 JUMPI DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC0 DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDEF DUP2 PUSH2 0xDAD JUMP JUMPDEST DUP2 EQ PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0C DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE36 DUP5 DUP3 DUP6 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A DUP3 PUSH2 0xE3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7A DUP2 PUSH2 0xE5F JUMP JUMPDEST DUP2 EQ PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE97 DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEB3 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC2 DUP6 DUP3 DUP7 ADD PUSH2 0xE88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED3 DUP6 DUP3 DUP7 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0xE5F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0xF29 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3F DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF69 DUP5 DUP3 DUP6 ADD PUSH2 0xF30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F7665640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB9 PUSH1 0x15 DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC4 DUP3 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFE8 DUP2 PUSH2 0xFAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1004 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x1011 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x101E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103B DUP2 PUSH2 0x1026 JUMP JUMPDEST DUP2 EQ PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1058 DUP2 PUSH2 0x1032 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1074 JUMPI PUSH2 0x1073 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1082 DUP5 DUP3 DUP6 ADD PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10F4 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP PUSH2 0x10FF DUP4 PUSH2 0xDAD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x110F JUMPI PUSH2 0x110E PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1130 DUP4 PUSH2 0xDAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1148 JUMPI PUSH2 0x1147 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0x0 DUP4 PUSH2 0x114E JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118A DUP3 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CA PUSH1 0xF DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 DUP3 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F9 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652065746820616D6F756E7420737570706C696564206D75737420626520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E2030000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125C PUSH1 0x2E DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1267 DUP3 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x128B DUP2 PUSH2 0x124F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH2 0x12B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4C69717569646974792070726F76696465642073686F756C6420626520677265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2031204554480000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1317 PUSH1 0x2F DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1322 DUP3 PUSH2 0x12BB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1346 DUP2 PUSH2 0x130A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1358 DUP3 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP PUSH2 0x1363 DUP4 PUSH2 0xDAD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1371 DUP2 PUSH2 0xDAD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74206F66207368617265730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C5 PUSH1 0x18 DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F4 DUP2 PUSH2 0x13B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6561736520617070726F76652074686520636F6E747261637420746F2064 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147D PUSH1 0x41 DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x1488 DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14AC DUP2 PUSH2 0x1470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E9 PUSH1 0xF DUP4 PUSH2 0xF72 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F4 DUP3 PUSH2 0x14B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1518 DUP2 PUSH2 0x14DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT CALLCODE 0xCB PUSH8 0xABA94B5978DC546E DUP7 BALANCE SELFBALANCE 0xD7 PUSH20 0x6CC3CE0A70115BB1B21C35EF2159F64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "622:2825:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;903:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2143:612;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2761:381;;;:::i;:::-;;3273:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3148:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1090:484;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;739:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1580:557;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;903:20;;;;:::o;2143:612::-;2265:10;2211:12;;;;;;;;;;2204:30;;;2235:10;2255:4;2204:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:71;;2196:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;2318:12;;;;;;;;;;2311:33;;;2345:10;2365:4;2372:10;2311:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2393:19;2422:12;;;;;;;;;;;2415:30;;;2454:4;2415:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2393:67;;2470:14;2517:11;2511:5;;:17;;;;:::i;:::-;2487:21;:41;;;;:::i;:::-;2470:58;;2567:6;2542:21;:31;2538:211;;2589:8;;;2538:211;2628:12;2654:10;2646:24;;2678:6;2646:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2627:62;;;2711:7;2703:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2613:136;2186:569;;2143:612;:::o;2761:381::-;2824:1;2812:9;:13;2804:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2886:22;2918:12;;;;;;;;;;;2911:30;;;2950:4;2911:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2886:70;;2966:22;2991:21;2966:46;;3022:14;3062;3056:5;;:20;;;;:::i;:::-;3039:14;:37;;;;:::i;:::-;3022:54;;3093:12;;;;;;;;;;3086:29;;;3116:10;3128:6;3086:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2794:348;;;2761:381::o;3273:172::-;3346:1;3334:9;:13;3330:109;;;3363:8;:6;:8::i;:::-;3330:109;;;3411:17;3418:9;3411:6;:17::i;:::-;3330:109;3273:172;:::o;3148:119::-;802:42;3220:27;;;3248:2;3252:7;3220:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3148:119;;:::o;1090:484::-;880:17;1168:7;:21;;1160:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1336:12;;;;;;;;;;1329:33;;;1363:10;1383:4;1390:7;1329:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1426:21;1416:7;:31;;;;:::i;:::-;1408:5;:39;;;;802:42;1457:27;;;1485:10;1497:16;1507:5;;1497:9;:16::i;:::-;1457:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1529:38;1547:10;1559:7;1529:38;;;;;;;:::i;:::-;;;;;;;;1090:484;:::o;739:27::-;;;;;;;;;;;;:::o;1580:557::-;1666:1;1650:13;:17;1642:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1773:13;802:42;1714:28;;;1743:10;1763:4;1714:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;1706:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;802:42;1867:31;;;1899:10;1919:4;1926:13;1867:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1957:12;;;;;;;;;;1950:29;;;1980:10;1992:13;1950:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2017:12;2043:10;2035:24;;2067:13;2035:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2016:69;;;2103:7;2095:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1632:505;1580:557;:::o;6281:2206:0:-;6329:7;6357:1;6352;:6;6348:45;;6381:1;6374:8;;;;6348:45;7058:14;7075:1;7058:18;;7086:9;7098:1;7086:13;;7124:1;7118:3;7113:1;:8;;:12;7109:79;;;7147:3;7141:9;;;;;7175:2;7164:13;;;;;7109:79;7211:1;7206:2;7201:1;:7;;:11;7197:77;;;7234:2;7228:8;;;;;7261:2;7250:13;;;;;7197:77;7297:1;7292:2;7287:1;:7;;:11;7283:77;;;7320:2;7314:8;;;;;7347:2;7336:13;;;;;7283:77;7383:1;7378:2;7373:1;:7;;:11;7369:76;;;7406:2;7400:8;;;;;7433:1;7422:12;;;;;7369:76;7467:1;7463;7458;:6;;:10;7454:74;;;7490:1;7484:7;;;;;7516:1;7505:12;;;;;7454:74;7550:1;7546;7541;:6;;:10;7537:74;;;7573:1;7567:7;;;;;7599:1;7588:12;;;;;7537:74;7633:1;7629;7624;:6;;:10;7620:53;;;7661:1;7650:12;;;;;7620:53;8131:1;8120:6;8116:1;:10;;;;;:::i;:::-;;;8107:6;:19;8106:26;;8097:35;;8180:1;8169:6;8165:1;:10;;;;;:::i;:::-;;;8156:6;:19;8155:26;;8146:35;;8229:1;8218:6;8214:1;:10;;;;;:::i;:::-;;;8205:6;:19;8204:26;;8195:35;;8278:1;8267:6;8263:1;:10;;;;;:::i;:::-;;;8254:6;:19;8253:26;;8244:35;;8327:1;8316:6;8312:1;:10;;;;;:::i;:::-;;;8303:6;:19;8302:26;;8293:35;;8376:1;8365:6;8361:1;:10;;;;;:::i;:::-;;;8352:6;:19;8351:26;;8342:35;;8425:1;8414:6;8410:1;:10;;;;;:::i;:::-;;;8401:6;:19;8400:26;;8391:35;;8447:23;8451:6;8463;8459:1;:10;;;;;:::i;:::-;;;8447:3;:23::i;:::-;8440:30;;;;6281:2206;;;;:::o;589:104::-;647:7;677:1;673;:5;:13;;685:1;673:13;;;681:1;673:13;666:20;;589:104;;;;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:332::-;2837:4;2875:2;2864:9;2860:18;2852:26;;2888:71;2956:1;2945:9;2941:17;2932:6;2888:71;:::i;:::-;2969:72;3037:2;3026:9;3022:18;3013:6;2969:72;:::i;:::-;2716:332;;;;;:::o;3054:143::-;3111:5;3142:6;3136:13;3127:22;;3158:33;3185:5;3158:33;:::i;:::-;3054:143;;;;:::o;3203:351::-;3273:6;3322:2;3310:9;3301:7;3297:23;3293:32;3290:119;;;3328:79;;:::i;:::-;3290:119;3448:1;3473:64;3529:7;3520:6;3509:9;3505:22;3473:64;:::i;:::-;3463:74;;3419:128;3203:351;;;;:::o;3560:169::-;3644:11;3678:6;3673:3;3666:19;3718:4;3713:3;3709:14;3694:29;;3560:169;;;;:::o;3735:171::-;3875:23;3871:1;3863:6;3859:14;3852:47;3735:171;:::o;3912:366::-;4054:3;4075:67;4139:2;4134:3;4075:67;:::i;:::-;4068:74;;4151:93;4240:3;4151:93;:::i;:::-;4269:2;4264:3;4260:12;4253:19;;3912:366;;;:::o;4284:419::-;4450:4;4488:2;4477:9;4473:18;4465:26;;4537:9;4531:4;4527:20;4523:1;4512:9;4508:17;4501:47;4565:131;4691:4;4565:131;:::i;:::-;4557:139;;4284:419;;;:::o;4709:442::-;4858:4;4896:2;4885:9;4881:18;4873:26;;4909:71;4977:1;4966:9;4962:17;4953:6;4909:71;:::i;:::-;4990:72;5058:2;5047:9;5043:18;5034:6;4990:72;:::i;:::-;5072;5140:2;5129:9;5125:18;5116:6;5072:72;:::i;:::-;4709:442;;;;;;:::o;5157:90::-;5191:7;5234:5;5227:13;5220:21;5209:32;;5157:90;;;:::o;5253:116::-;5323:21;5338:5;5323:21;:::i;:::-;5316:5;5313:32;5303:60;;5359:1;5356;5349:12;5303:60;5253:116;:::o;5375:137::-;5429:5;5460:6;5454:13;5445:22;;5476:30;5500:5;5476:30;:::i;:::-;5375:137;;;;:::o;5518:345::-;5585:6;5634:2;5622:9;5613:7;5609:23;5605:32;5602:119;;;5640:79;;:::i;:::-;5602:119;5760:1;5785:61;5838:7;5829:6;5818:9;5814:22;5785:61;:::i;:::-;5775:71;;5731:125;5518:345;;;;:::o;5869:180::-;5917:77;5914:1;5907:88;6014:4;6011:1;6004:15;6038:4;6035:1;6028:15;6055:180;6103:77;6100:1;6093:88;6200:4;6197:1;6190:15;6224:4;6221:1;6214:15;6241:185;6281:1;6298:20;6316:1;6298:20;:::i;:::-;6293:25;;6332:20;6350:1;6332:20;:::i;:::-;6327:25;;6371:1;6361:35;;6376:18;;:::i;:::-;6361:35;6418:1;6415;6411:9;6406:14;;6241:185;;;;:::o;6432:194::-;6472:4;6492:20;6510:1;6492:20;:::i;:::-;6487:25;;6526:20;6544:1;6526:20;:::i;:::-;6521:25;;6570:1;6567;6563:9;6555:17;;6594:1;6588:4;6585:11;6582:37;;;6599:18;;:::i;:::-;6582:37;6432:194;;;;:::o;6632:147::-;6733:11;6770:3;6755:18;;6632:147;;;;:::o;6785:114::-;;:::o;6905:398::-;7064:3;7085:83;7166:1;7161:3;7085:83;:::i;:::-;7078:90;;7177:93;7266:3;7177:93;:::i;:::-;7295:1;7290:3;7286:11;7279:18;;6905:398;;;:::o;7309:379::-;7493:3;7515:147;7658:3;7515:147;:::i;:::-;7508:154;;7679:3;7672:10;;7309:379;;;:::o;7694:165::-;7834:17;7830:1;7822:6;7818:14;7811:41;7694:165;:::o;7865:366::-;8007:3;8028:67;8092:2;8087:3;8028:67;:::i;:::-;8021:74;;8104:93;8193:3;8104:93;:::i;:::-;8222:2;8217:3;8213:12;8206:19;;7865:366;;;:::o;8237:419::-;8403:4;8441:2;8430:9;8426:18;8418:26;;8490:9;8484:4;8480:20;8476:1;8465:9;8461:17;8454:47;8518:131;8644:4;8518:131;:::i;:::-;8510:139;;8237:419;;;:::o;8662:233::-;8802:34;8798:1;8790:6;8786:14;8779:58;8871:16;8866:2;8858:6;8854:15;8847:41;8662:233;:::o;8901:366::-;9043:3;9064:67;9128:2;9123:3;9064:67;:::i;:::-;9057:74;;9140:93;9229:3;9140:93;:::i;:::-;9258:2;9253:3;9249:12;9242:19;;8901:366;;;:::o;9273:419::-;9439:4;9477:2;9466:9;9462:18;9454:26;;9526:9;9520:4;9516:20;9512:1;9501:9;9497:17;9490:47;9554:131;9680:4;9554:131;:::i;:::-;9546:139;;9273:419;;;:::o;9698:332::-;9819:4;9857:2;9846:9;9842:18;9834:26;;9870:71;9938:1;9927:9;9923:17;9914:6;9870:71;:::i;:::-;9951:72;10019:2;10008:9;10004:18;9995:6;9951:72;:::i;:::-;9698:332;;;;;:::o;10036:234::-;10176:34;10172:1;10164:6;10160:14;10153:58;10245:17;10240:2;10232:6;10228:15;10221:42;10036:234;:::o;10276:366::-;10418:3;10439:67;10503:2;10498:3;10439:67;:::i;:::-;10432:74;;10515:93;10604:3;10515:93;:::i;:::-;10633:2;10628:3;10624:12;10617:19;;10276:366;;;:::o;10648:419::-;10814:4;10852:2;10841:9;10837:18;10829:26;;10901:9;10895:4;10891:20;10887:1;10876:9;10872:17;10865:47;10929:131;11055:4;10929:131;:::i;:::-;10921:139;;10648:419;;;:::o;11073:410::-;11113:7;11136:20;11154:1;11136:20;:::i;:::-;11131:25;;11170:20;11188:1;11170:20;:::i;:::-;11165:25;;11225:1;11222;11218:9;11247:30;11265:11;11247:30;:::i;:::-;11236:41;;11426:1;11417:7;11413:15;11410:1;11407:22;11387:1;11380:9;11360:83;11337:139;;11456:18;;:::i;:::-;11337:139;11121:362;11073:410;;;;:::o;11489:174::-;11629:26;11625:1;11617:6;11613:14;11606:50;11489:174;:::o;11669:366::-;11811:3;11832:67;11896:2;11891:3;11832:67;:::i;:::-;11825:74;;11908:93;11997:3;11908:93;:::i;:::-;12026:2;12021:3;12017:12;12010:19;;11669:366;;;:::o;12041:419::-;12207:4;12245:2;12234:9;12230:18;12222:26;;12294:9;12288:4;12284:20;12280:1;12269:9;12265:17;12258:47;12322:131;12448:4;12322:131;:::i;:::-;12314:139;;12041:419;;;:::o;12466:289::-;12606:34;12602:1;12594:6;12590:14;12583:58;12675:34;12670:2;12662:6;12658:15;12651:59;12744:3;12739:2;12731:6;12727:15;12720:28;12466:289;:::o;12761:366::-;12903:3;12924:67;12988:2;12983:3;12924:67;:::i;:::-;12917:74;;13000:93;13089:3;13000:93;:::i;:::-;13118:2;13113:3;13109:12;13102:19;;12761:366;;;:::o;13133:419::-;13299:4;13337:2;13326:9;13322:18;13314:26;;13386:9;13380:4;13376:20;13372:1;13361:9;13357:17;13350:47;13414:131;13540:4;13414:131;:::i;:::-;13406:139;;13133:419;;;:::o;13558:165::-;13698:17;13694:1;13686:6;13682:14;13675:41;13558:165;:::o;13729:366::-;13871:3;13892:67;13956:2;13951:3;13892:67;:::i;:::-;13885:74;;13968:93;14057:3;13968:93;:::i;:::-;14086:2;14081:3;14077:12;14070:19;;13729:366;;;:::o;14101:419::-;14267:4;14305:2;14294:9;14290:18;14282:26;;14354:9;14348:4;14344:20;14340:1;14329:9;14325:17;14318:47;14382:131;14508:4;14382:131;:::i;:::-;14374:139;;14101:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1092200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getDAI()": "infinite",
								"getEth(uint256)": "infinite",
								"kLast()": "2430",
								"provideLiquidity(uint256)": "infinite",
								"reedemShares(uint256)": "infinite",
								"reserveToken()": "2555",
								"swap(uint256)": "infinite",
								"transferTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 3447,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 930,
									"end": 1009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 989,
									"end": 1002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 974,
									"end": 986,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 986,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 974,
									"end": 1002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 930,
									"end": 1009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 3447,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122019f2cb67aba94b5978dc546e863147d77306cc3ce0a70115bb1b21c35ef2159f64736f6c63430008110033",
									".code": [
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "BEC3FA17"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "BEC3FA17"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "EB521A4C"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "F4325D67"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "FF9B3758"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "7464FC3D"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "8E3073A6"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "8EF85568"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "94B918DE"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 3447,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 903,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 903,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2143,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2761,
											"end": 3142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3273,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3273,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3148,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3148,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1090,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1090,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 739,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1580,
											"end": 2137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1580,
											"end": 2137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 903,
											"end": 923,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 903,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2204,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2204,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2204,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2275,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2275,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2196,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2196,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2344,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2382,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2311,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2311,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2434,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2415,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2415,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2415,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2511,
											"end": 2516,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2511,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2508,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2487,
											"end": 2528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2487,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2487,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2563,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2573,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2538,
											"end": 2749,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2749,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2538,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2670,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2670,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2646,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2703,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2703,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2613,
											"end": 2749,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2761,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2825,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2804,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2804,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2950,
											"end": 2954,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2911,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2911,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2911,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2886,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3012,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3056,
											"end": 3061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3056,
											"end": 3076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3056,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3076,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3056,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3039,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3039,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3116,
											"end": 3126,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3086,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3086,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3135,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 3142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 3142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 3142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3346,
											"end": 3347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3363,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3371,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3363,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3418,
											"end": 3427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3411,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3330,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 802,
											"end": 844,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 3220,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3259,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3220,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3220,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3148,
											"end": 3267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1189,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1189,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1160,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1160,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1363,
											"end": 1373,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1387,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1329,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1329,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1447,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1416,
											"end": 1447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1416,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1447,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1416,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1408,
											"end": 1447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1447,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 802,
											"end": 844,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1457,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1485,
											"end": 1495,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1507,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1507,
											"end": 1512,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1497,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1497,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1457,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1457,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "PUSH",
											"source": 2,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1529,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1567,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 739,
											"end": 766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 739,
											"end": 766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1667,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1642,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1642,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 802,
											"end": 844,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1714,
											"end": 1742,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1742,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1742,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1743,
											"end": 1753,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1767,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1714,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1714,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1714,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1786,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1786,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1706,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1706,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 802,
											"end": 844,
											"name": "PUSH",
											"source": 2,
											"value": "39DB207DFF3411F4FAB0483D419306873CBC13D9"
										},
										{
											"begin": 1867,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1899,
											"end": 1909,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1939,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1867,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1867,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1979,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1980,
											"end": 1990,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1950,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1950,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2053,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2059,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2067,
											"end": 2080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2035,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2095,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2095,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1632,
											"end": 2137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6348,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7086,
											"end": 7099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7109,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7250,
											"end": 7263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7197,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7287,
											"end": 7288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7294,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7349,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7283,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7380,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7373,
											"end": 7384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7369,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7468,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 7454,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7541,
											"end": 7551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7567,
											"end": 7574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 7537,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7624,
											"end": 7634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8116,
											"end": 8126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8116,
											"end": 8126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8107,
											"end": 8126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8165,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8181,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8146,
											"end": 8181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8214,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8267,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8263,
											"end": 8273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8254,
											"end": 8273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8279,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8312,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8303,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8302,
											"end": 8328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8293,
											"end": 8328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8365,
											"end": 8371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8361,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8371,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8410,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8420,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8426,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8391,
											"end": 8426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8459,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8459,
											"end": 8469,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8447,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8447,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8440,
											"end": 8470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6281,
											"end": 8487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 589,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 673,
											"end": 678,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 673,
											"end": 686,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 673,
											"end": 686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 3048,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2716,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2837,
											"end": 2841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2860,
											"end": 2878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2852,
											"end": 2878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2941,
											"end": 2958,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2938,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2888,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2959,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2888,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3035,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3022,
											"end": 3040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2969,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2969,
											"end": 3041,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2969,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 3048,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 3048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 3048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3197,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3054,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3149,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3127,
											"end": 3149,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3127,
											"end": 3149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3158,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 3158,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3197,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3197,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3554,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3203,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3320,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3325,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3409,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 3290,
											"end": 3409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3328,
											"end": 3407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 3328,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 3290,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3529,
											"end": 3536,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3473,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3473,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3473,
											"end": 3537,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3473,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3554,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3729,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3560,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3685,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3709,
											"end": 3723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3729,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3735,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3898,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E7472616374206E6F7420617070726F7665640000000000000000000000"
										},
										{
											"begin": 3871,
											"end": 3872,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3852,
											"end": 3899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 4278,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3912,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4139,
											"end": 4141,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4134,
											"end": 4137,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4075,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4142,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4075,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4240,
											"end": 4243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4151,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4244,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4151,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4271,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4260,
											"end": 4272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4253,
											"end": 4272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 4278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 4278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 4278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 4278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4703,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4284,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4450,
											"end": 4454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4490,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4537,
											"end": 4546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4531,
											"end": 4535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4521,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 4525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4501,
											"end": 4548,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4691,
											"end": 4695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4565,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4696,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 4565,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4696,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4703,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4885,
											"end": 4894,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 4899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 4979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4909,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4909,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5034,
											"end": 5040,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4990,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4990,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5072,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5247,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5157,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5239,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5369,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5253,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5338,
											"end": 5343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5323,
											"end": 5344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5323,
											"end": 5344,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5323,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5321,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5345,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5303,
											"end": 5363,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5361,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5363,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 5303,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5512,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5375,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5454,
											"end": 5467,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5500,
											"end": 5505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5476,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5506,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5476,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5863,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5518,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5636,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5620,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5632,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5605,
											"end": 5637,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5721,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5602,
											"end": 5721,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5640,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 5640,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5640,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5640,
											"end": 5719,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 5640,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5721,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 5602,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5838,
											"end": 5845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5814,
											"end": 5836,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5785,
											"end": 5846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 5846,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5785,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5775,
											"end": 5846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5775,
											"end": 5846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 6049,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5869,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5994,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5914,
											"end": 5915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6014,
											"end": 6018,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6004,
											"end": 6019,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6038,
											"end": 6042,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6035,
											"end": 6036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6043,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6055,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6055,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6103,
											"end": 6180,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6181,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6204,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6190,
											"end": 6205,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6224,
											"end": 6228,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6229,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6426,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6241,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6281,
											"end": 6282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6298,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6298,
											"end": 6318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6298,
											"end": 6318,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6298,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6318,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6293,
											"end": 6318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6332,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 6332,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6352,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6327,
											"end": 6352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6371,
											"end": 6372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6361,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6361,
											"end": 6396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6376,
											"end": 6394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6361,
											"end": 6396,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 6361,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6426,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6241,
											"end": 6426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6626,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 6432,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6510,
											"end": 6511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6492,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6512,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 6492,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6487,
											"end": 6512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6487,
											"end": 6512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6526,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6526,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6521,
											"end": 6546,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6521,
											"end": 6546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6571,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6563,
											"end": 6572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6555,
											"end": 6572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6555,
											"end": 6572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6596,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6582,
											"end": 6619,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6582,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 6582,
											"end": 6619,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6599,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6599,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6582,
											"end": 6619,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 6582,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6432,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6779,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6632,
											"end": 6779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6733,
											"end": 6744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6779,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6779,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6899,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6785,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6905,
											"end": 7303,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6905,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7085,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7168,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 7085,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7078,
											"end": 7168,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7078,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7177,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 7266,
											"end": 7269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7177,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7177,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7177,
											"end": 7270,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 7177,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7293,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6905,
											"end": 7303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6905,
											"end": 7303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6905,
											"end": 7303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6905,
											"end": 7303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7688,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 7309,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7493,
											"end": 7496,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7658,
											"end": 7661,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7515,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 7515,
											"end": 7662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7515,
											"end": 7662,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 7515,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7694,
											"end": 7859,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 7694,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E73666572204661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7852,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7694,
											"end": 7859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7694,
											"end": 7859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 8231,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 7865,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8007,
											"end": 8010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8092,
											"end": 8094,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 8087,
											"end": 8090,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8028,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 8028,
											"end": 8095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8028,
											"end": 8095,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8028,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8021,
											"end": 8095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 8193,
											"end": 8196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 8104,
											"end": 8197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8197,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 8104,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8217,
											"end": 8220,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8206,
											"end": 8225,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8206,
											"end": 8225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 8231,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 8231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 8231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 8231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8656,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 8237,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8403,
											"end": 8407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8430,
											"end": 8439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8426,
											"end": 8444,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8418,
											"end": 8444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8418,
											"end": 8444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8490,
											"end": 8499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8480,
											"end": 8500,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8476,
											"end": 8477,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8474,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8461,
											"end": 8478,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8454,
											"end": 8501,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8518,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8518,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 8518,
											"end": 8649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8518,
											"end": 8649,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 8518,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8510,
											"end": 8649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8510,
											"end": 8649,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8895,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 8662,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 8836,
											"name": "PUSH",
											"source": 3,
											"value": "5468652065746820616D6F756E7420737570706C696564206D75737420626520"
										},
										{
											"begin": 8798,
											"end": 8799,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8779,
											"end": 8837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8871,
											"end": 8887,
											"name": "PUSH",
											"source": 3,
											"value": "67726561746572207468616E2030000000000000000000000000000000000000"
										},
										{
											"begin": 8866,
											"end": 8868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8854,
											"end": 8869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8901,
											"end": 9267,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 8901,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9043,
											"end": 9046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 9128,
											"end": 9130,
											"name": "PUSH",
											"source": 3,
											"value": "2E"
										},
										{
											"begin": 9123,
											"end": 9126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 9064,
											"end": 9131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9064,
											"end": 9131,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 9064,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9057,
											"end": 9131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9057,
											"end": 9131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9140,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9229,
											"end": 9232,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9140,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9140,
											"end": 9233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9140,
											"end": 9233,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 9140,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9249,
											"end": 9261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8901,
											"end": 9267,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8901,
											"end": 9267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8901,
											"end": 9267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8901,
											"end": 9267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9692,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 9273,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9477,
											"end": 9479,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9466,
											"end": 9475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9454,
											"end": 9480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9454,
											"end": 9480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9526,
											"end": 9535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9516,
											"end": 9536,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9512,
											"end": 9513,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9501,
											"end": 9510,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9497,
											"end": 9514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9490,
											"end": 9537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 9680,
											"end": 9684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9554,
											"end": 9685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9554,
											"end": 9685,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 9554,
											"end": 9685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 10030,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 9698,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9819,
											"end": 9823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9859,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9846,
											"end": 9855,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9834,
											"end": 9860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9870,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9927,
											"end": 9936,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9914,
											"end": 9920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9870,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9870,
											"end": 9941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9870,
											"end": 9941,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 9870,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9951,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 10019,
											"end": 10021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10017,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9995,
											"end": 10001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9951,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9951,
											"end": 10023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9951,
											"end": 10023,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 9951,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 10030,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 10030,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 10030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 10030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 10030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9698,
											"end": 10030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10270,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 10036,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10176,
											"end": 10210,
											"name": "PUSH",
											"source": 3,
											"value": "4C69717569646974792070726F76696465642073686F756C6420626520677265"
										},
										{
											"begin": 10172,
											"end": 10173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10160,
											"end": 10174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10153,
											"end": 10211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10245,
											"end": 10262,
											"name": "PUSH",
											"source": 3,
											"value": "61746572207468616E2031204554480000000000000000000000000000000000"
										},
										{
											"begin": 10240,
											"end": 10242,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10232,
											"end": 10238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10228,
											"end": 10243,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10221,
											"end": 10263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10642,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10276,
											"end": 10642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10418,
											"end": 10421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10439,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 10503,
											"end": 10505,
											"name": "PUSH",
											"source": 3,
											"value": "2F"
										},
										{
											"begin": 10498,
											"end": 10501,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10439,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 10439,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10439,
											"end": 10506,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 10439,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10432,
											"end": 10506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10432,
											"end": 10506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10515,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 10604,
											"end": 10607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10515,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 10515,
											"end": 10608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10515,
											"end": 10608,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 10515,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10635,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10631,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10624,
											"end": 10636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10642,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 11067,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 10648,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10854,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10841,
											"end": 10850,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10837,
											"end": 10855,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10901,
											"end": 10910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10895,
											"end": 10899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10891,
											"end": 10911,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 10889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10865,
											"end": 10912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10929,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 11055,
											"end": 11059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10929,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10929,
											"end": 11060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10929,
											"end": 11060,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 10929,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10921,
											"end": 11060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10921,
											"end": 11060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 11067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 11067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 11067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 11067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11483,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 11073,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11113,
											"end": 11120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11136,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 11154,
											"end": 11155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11136,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 11136,
											"end": 11156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11136,
											"end": 11156,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 11136,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11131,
											"end": 11156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11131,
											"end": 11156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11170,
											"end": 11190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11188,
											"end": 11189,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11170,
											"end": 11190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 11170,
											"end": 11190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11170,
											"end": 11190,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 11170,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 11190,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 11190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11225,
											"end": 11226,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11222,
											"end": 11223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11218,
											"end": 11227,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 11247,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 11265,
											"end": 11276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11247,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 11247,
											"end": 11277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11247,
											"end": 11277,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 11247,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11236,
											"end": 11277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11236,
											"end": 11277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11426,
											"end": 11427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11417,
											"end": 11424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11413,
											"end": 11428,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 11410,
											"end": 11411,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11407,
											"end": 11429,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11387,
											"end": 11388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11380,
											"end": 11389,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11360,
											"end": 11443,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11337,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 11337,
											"end": 11476,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 11456,
											"end": 11474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11337,
											"end": 11476,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 11337,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11121,
											"end": 11483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11483,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11073,
											"end": 11483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11489,
											"end": 11663,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 11489,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11629,
											"end": 11655,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420616D6F756E74206F66207368617265730000000000000000"
										},
										{
											"begin": 11625,
											"end": 11626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11617,
											"end": 11623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11613,
											"end": 11627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11606,
											"end": 11656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11489,
											"end": 11663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11489,
											"end": 11663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 12035,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 11669,
											"end": 12035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11811,
											"end": 11814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 11896,
											"end": 11898,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 11891,
											"end": 11894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11832,
											"end": 11899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 11832,
											"end": 11899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11832,
											"end": 11899,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 11832,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11899,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11825,
											"end": 11899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11908,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 11997,
											"end": 12000,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11908,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 11908,
											"end": 12001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11908,
											"end": 12001,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 11908,
											"end": 12001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12026,
											"end": 12028,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12021,
											"end": 12024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12010,
											"end": 12029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12010,
											"end": 12029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 12035,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 12035,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 12035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 12035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12041,
											"end": 12460,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 12041,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12207,
											"end": 12211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12245,
											"end": 12247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12234,
											"end": 12243,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12230,
											"end": 12248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12248,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12222,
											"end": 12248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12294,
											"end": 12303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12288,
											"end": 12292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12280,
											"end": 12281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12269,
											"end": 12278,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12265,
											"end": 12282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12258,
											"end": 12305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12322,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 12448,
											"end": 12452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12322,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 12322,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12322,
											"end": 12453,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 12322,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12314,
											"end": 12453,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12314,
											"end": 12453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12041,
											"end": 12460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12041,
											"end": 12460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12041,
											"end": 12460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12041,
											"end": 12460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12466,
											"end": 12755,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 12466,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12606,
											"end": 12640,
											"name": "PUSH",
											"source": 3,
											"value": "506C6561736520617070726F76652074686520636F6E747261637420746F2064"
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12590,
											"end": 12604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12641,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12675,
											"end": 12709,
											"name": "PUSH",
											"source": 3,
											"value": "6564756374206C747220746F6B656E732066726F6D20796F75722077616C6C65"
										},
										{
											"begin": 12670,
											"end": 12672,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12662,
											"end": 12668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12658,
											"end": 12673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12651,
											"end": 12710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12744,
											"end": 12747,
											"name": "PUSH",
											"source": 3,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12739,
											"end": 12741,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12731,
											"end": 12737,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12727,
											"end": 12742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12720,
											"end": 12748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12466,
											"end": 12755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12466,
											"end": 12755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 13127,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 12761,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12903,
											"end": 12906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12988,
											"end": 12990,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 12983,
											"end": 12986,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12924,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 12924,
											"end": 12991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12924,
											"end": 12991,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12924,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12917,
											"end": 12991,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12917,
											"end": 12991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13000,
											"end": 13093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 13089,
											"end": 13092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13000,
											"end": 13093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 13000,
											"end": 13093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13000,
											"end": 13093,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 13000,
											"end": 13093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13118,
											"end": 13120,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 13113,
											"end": 13116,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13102,
											"end": 13121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13102,
											"end": 13121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 13127,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 13127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 13127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12761,
											"end": 13127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13133,
											"end": 13552,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 13133,
											"end": 13552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13299,
											"end": 13303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13337,
											"end": 13339,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13326,
											"end": 13335,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13322,
											"end": 13340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13314,
											"end": 13340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13314,
											"end": 13340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13386,
											"end": 13395,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13380,
											"end": 13384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13376,
											"end": 13396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13372,
											"end": 13373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13361,
											"end": 13370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13357,
											"end": 13374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13350,
											"end": 13397,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13414,
											"end": 13545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 13540,
											"end": 13544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13414,
											"end": 13545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 13414,
											"end": 13545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13414,
											"end": 13545,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 13414,
											"end": 13545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13406,
											"end": 13545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13406,
											"end": 13545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13133,
											"end": 13552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13133,
											"end": 13552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13133,
											"end": 13552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13133,
											"end": 13552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13558,
											"end": 13723,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 13558,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13698,
											"end": 13715,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 13694,
											"end": 13695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13686,
											"end": 13692,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13682,
											"end": 13696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13675,
											"end": 13716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13558,
											"end": 13723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13558,
											"end": 13723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13871,
											"end": 13874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 13956,
											"end": 13958,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 13951,
											"end": 13954,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 13892,
											"end": 13959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 13892,
											"end": 13959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13885,
											"end": 13959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13885,
											"end": 13959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 14057,
											"end": 14060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 13968,
											"end": 14061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 13968,
											"end": 14061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14086,
											"end": 14088,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14077,
											"end": 14089,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14070,
											"end": 14089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14070,
											"end": 14089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13729,
											"end": 14095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13729,
											"end": 14095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14267,
											"end": 14271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14294,
											"end": 14303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14290,
											"end": 14308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14282,
											"end": 14308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14282,
											"end": 14308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14354,
											"end": 14363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14348,
											"end": 14352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14344,
											"end": 14364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 14340,
											"end": 14341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14329,
											"end": 14338,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14325,
											"end": 14342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 14382,
											"end": 14513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 14382,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14374,
											"end": 14513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14374,
											"end": 14513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14101,
											"end": 14520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14101,
											"end": 14520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/IERC20.sol",
								"contracts/LiquidityPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getDAI()": "8ef85568",
							"getEth(uint256)": "8e3073a6",
							"kLast()": "7464fc3d",
							"provideLiquidity(uint256)": "eb521a4c",
							"reedemShares(uint256)": "ff9b3758",
							"reserveToken()": "f4325d67",
							"swap(uint256)": "94b918de",
							"transferTokens(address,uint256)": "bec3fa17"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getDAI\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_DAIAmount\",\"type\":\"uint256\"}],\"name\":\"getEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sharesAmount\",\"type\":\"uint256\"}],\"name\":\"reedemShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"daiAmount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0xf58e50847cd3117104938c81de950fd0574954167eda2d3e8a94dac02bf62179\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bda4e0ac4619351adcce67522385b0261973ba0dcad7e1de49535fad8eaf52cf\",\"dweb:/ipfs/QmbrpsFsrRTFAwcbzAtsHo1sSwjWeUtagzUNRjTbgJfVMn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 587,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "reserveToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 595,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "kLast",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 6,
									"members": [
										{
											"id": 3,
											"name": "Down",
											"nameLocation": "245:4:0",
											"nodeType": "EnumValue",
											"src": "245:4:0"
										},
										{
											"id": 4,
											"name": "Up",
											"nameLocation": "287:2:0",
											"nodeType": "EnumValue",
											"src": "287:2:0"
										},
										{
											"id": 5,
											"name": "Zero",
											"nameLocation": "318:4:0",
											"nodeType": "EnumValue",
											"src": "318:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:0",
									"nodeType": "EnumDefinition",
									"src": "221:122:0"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "480:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 16,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "497:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 17,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:0",
													"trueExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 22,
												"nodeType": "Return",
												"src": "490:21:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "426:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "437:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "471:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:0"
									},
									"scope": 503,
									"src": "413:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "656:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 34,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 35,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 38,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:0",
													"trueExpression": {
														"id": 37,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 40,
												"nodeType": "Return",
												"src": "666:20:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "598:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "602:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "613:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:0"
									},
									"scope": 503,
									"src": "589:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "877:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 53,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 55,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 56,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "942:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 57,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 59,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 51,
												"id": 63,
												"nodeType": "Return",
												"src": "924:28:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "815:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "831:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "842:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "834:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:0"
									},
									"scope": 503,
									"src": "806:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1229:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 75,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 79,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 80,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 88,
												"nodeType": "Return",
												"src": "1310:35:0"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1167:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1183:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1220:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:0"
									},
									"scope": 503,
									"src": "1158:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1796:3797:0",
										"statements": [
											{
												"id": 210,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:0",
												"statements": [
													{
														"assignments": [
															103
														],
														"declarations": [
															{
																"constant": false,
																"id": 103,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2135:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2127:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 102,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 104,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:0"
													},
													{
														"assignments": [
															106
														],
														"declarations": [
															{
																"constant": false,
																"id": 106,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2207:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2199:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 105,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:0",
																"valueSize": 1
															}
														],
														"id": 108,
														"nodeType": "InlineAssembly",
														"src": "2270:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 117,
														"nodeType": "IfStatement",
														"src": "2513:75:0",
														"trueBody": {
															"id": 116,
															"nodeType": "Block",
															"src": "2529:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 112,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 113,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "2562:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 115,
																	"nodeType": "Return",
																	"src": "2547:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "2698:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 120,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2712:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 118,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 123,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:0"
													},
													{
														"assignments": [
															125
														],
														"declarations": [
															{
																"constant": false,
																"id": 125,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2982:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "2974:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 126,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:0",
																"valueSize": 1
															},
															{
																"declaration": 106,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:0",
																"valueSize": 1
															},
															{
																"declaration": 125,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:0",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:0",
																"valueSize": 1
															},
															{
																"declaration": 95,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:0",
																"valueSize": 1
															}
														],
														"id": 127,
														"nodeType": "InlineAssembly",
														"src": "3005:300:0"
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3620:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "3612:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 137,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3627:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:0",
																			"subExpression": {
																				"id": 131,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "3643:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:0",
																"valueSize": 1
															},
															{
																"declaration": 97,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:0",
																"valueSize": 1
															},
															{
																"declaration": 103,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:0",
																"valueSize": 1
															},
															{
																"declaration": 129,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:0",
																"valueSize": 1
															}
														],
														"id": 138,
														"nodeType": "InlineAssembly",
														"src": "3673:371:0"
													},
													{
														"expression": {
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 139,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "4110:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 140,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "4119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 141,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 144,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:0"
													},
													{
														"assignments": [
															146
														],
														"declarations": [
															{
																"constant": false,
																"id": 146,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4457:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 210,
																"src": "4449:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 148,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "4472:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:0"
													},
													{
														"expression": {
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 154,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4705:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 156,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4720:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 157,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 161,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:0"
													},
													{
														"expression": {
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 162,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 165,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 169,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:0"
													},
													{
														"expression": {
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 170,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 172,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 173,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4873:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 177,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:0"
													},
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 178,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 180,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 181,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:0"
													},
													{
														"expression": {
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 186,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 188,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "4999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 189,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5013:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 193,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:0"
													},
													{
														"expression": {
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 194,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 196,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "5070:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 197,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5084:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:0"
													},
													{
														"expression": {
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "5525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 203,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "5534:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 204,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 207,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:0"
													},
													{
														"expression": {
															"id": 208,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "5570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 101,
														"id": 209,
														"nodeType": "Return",
														"src": "5563:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1677:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1720:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1712:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1739:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1731:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:0"
									},
									"scope": 503,
									"src": "1668:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "5873:189:0",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5891:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "5883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 234,
												"initialValue": {
													"arguments": [
														{
															"id": 230,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5907:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 231,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5910:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 232,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5913:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 229,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															212,
															256
														],
														"referencedDeclaration": 212,
														"src": "5900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 236,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5951:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5960:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5951:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 240,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 241,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "5976:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 242,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5979:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 239,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "5935:98:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "5997:36:0",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 247,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "6011:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 253,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "6049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 254,
												"nodeType": "Return",
												"src": "6042:13:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5734:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5777:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5769:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5796:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5788:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5826:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "Rounding",
														"nameLocations": [
															"5817:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "5817:8:0"
													},
													"referencedDeclaration": 6,
													"src": "5817:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "5864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:0"
									},
									"scope": 503,
									"src": "5725:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "6338:2149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "6352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 270,
												"nodeType": "IfStatement",
												"src": "6348:45:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "6360:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 263,
															"id": 268,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7066:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7058:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"hexValue": "31",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7094:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "7086:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"id": 277,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "7098:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 279,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "7109:79:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "7127:61:0",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 284,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:0"
														},
														{
															"expression": {
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 294,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "7197:77:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "7214:60:0",
													"statements": [
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 299,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7250:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 309,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "7283:77:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "7300:60:0",
													"statements": [
														{
															"expression": {
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 314,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:0"
														},
														{
															"expression": {
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 318,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 324,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "7369:76:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7386:59:0",
													"statements": [
														{
															"expression": {
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 329,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:0"
														},
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7422:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 339,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7458:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "7454:74:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "7470:58:0",
													"statements": [
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:0"
														},
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 348,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7505:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 354,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7537:74:0",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7553:58:0",
													"statements": [
														{
															"expression": {
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 359,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 362,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:0"
														},
														{
															"expression": {
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 363,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7588:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7624:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "7620:53:0",
												"trueBody": {
													"id": 378,
													"nodeType": "Block",
													"src": "7636:37:0",
													"statements": [
														{
															"expression": {
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 374,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:0"
														}
													]
												}
											},
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 380,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 381,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8107:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8116:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 383,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8120:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:0"
													},
													{
														"expression": {
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 392,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8156:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 393,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8165:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 394,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8169:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 401,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:0"
													},
													{
														"expression": {
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 402,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8205:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 404,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8214:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 405,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8218:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:0"
													},
													{
														"expression": {
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 413,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8244:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 414,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8254:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 415,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8263:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 416,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8267:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 423,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:0"
													},
													{
														"expression": {
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8293:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 426,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8312:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 427,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8316:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:0"
													},
													{
														"expression": {
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 436,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8352:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 437,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8361:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 438,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8365:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 441,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:0"
													},
													{
														"expression": {
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "8401:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 448,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "8410:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 449,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "8414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 458,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "8459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 460,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 457,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "8447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 263,
														"id": 463,
														"nodeType": "Return",
														"src": "8440:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:0",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6290:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6303:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6295:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "6329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:0"
									},
									"scope": 503,
									"src": "6281:2206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "8663:161:0",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8681:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "8673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 477,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 482,
												"initialValue": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															466,
															502
														],
														"referencedDeclaration": 466,
														"src": "8690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$6",
															"typeString": "enum Math.Rounding"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 483,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 484,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "8723:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$6_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8732:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "8723:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$6",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "8747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 490,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "8756:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "8707:88:0",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "8759:36:0",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "8773:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 499,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "8811:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 500,
												"nodeType": "Return",
												"src": "8804:13:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$6",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "Rounding",
														"nameLocations": [
															"8612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "8612:8:0"
													},
													"referencedDeclaration": 6,
													"src": "8612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$6",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "8654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:0"
									},
									"scope": 503,
									"src": "8587:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "202:8624:0",
							"usedErrors": []
						}
					],
					"src": "103:8724:0"
				},
				"id": 0
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 515,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 524,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 581,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 581,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 581,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 581,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 581,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 581,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2660:1"
				},
				"id": 1
			},
			"contracts/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							581
						],
						"LiquidityPool": [
							912
						],
						"Math": [
							503
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "519:23:2"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 582,
							"src": "544:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 913,
							"sourceUnit": 504,
							"src": "567:53:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "LiquidityPool",
							"nameLocation": "631:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f4325d67",
									"id": 587,
									"mutability": "mutable",
									"name": "reserveToken",
									"nameLocation": "754:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "739:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 586,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "739:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 590,
									"mutability": "constant",
									"name": "ltrAddress",
									"nameLocation": "789:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "772:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 588,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "772:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833394442323037446666333431314634666162303438334434313933303638373343626331336439",
										"id": 589,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "802:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x39DB207Dff3411F4fab0483D419306873Cbc13d9"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 593,
									"mutability": "constant",
									"name": "MINIMUMETH",
									"nameLocation": "867:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "850:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 591,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "850:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030303030303030303030303030",
										"id": 592,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "880:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "10000000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7464fc3d",
									"id": 595,
									"mutability": "mutable",
									"name": "kLast",
									"nameLocation": "918:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 912,
									"src": "903:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 594,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "903:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "964:45:2",
										"statements": [
											{
												"expression": {
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 600,
														"name": "reserveToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "974:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 601,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "989:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "974:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "974:28:2"
											}
										]
									},
									"id": 605,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "950:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "942:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:23:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "964:0:2"
									},
									"scope": 912,
									"src": "930:79:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6",
									"id": 611,
									"name": "liquidityProvided",
									"nameLocation": "1021:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "1047:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1039:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "1075:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1067:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:45:2"
									},
									"src": "1015:69:2"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "1150:424:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 617,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "1168:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 618,
																"name": "MINIMUMETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1179:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1168:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69717569646974792070726f76696465642073686f756c642062652067726561746572207468616e203120455448",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1191:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
																"typeString": "literal_string \"Liquidity provided should be greater than 1 ETH\""
															},
															"value": "Liquidity provided should be greater than 1 ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87f892767247e0a9bf648da2ad732f43b269294c8f57fa691d56916667321c23",
																"typeString": "literal_string \"Liquidity provided should be greater than 1 ETH\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1160:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1160:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "1160:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 627,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1363:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1367:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1363:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 631,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 629,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1390:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 624,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1336:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 623,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1329:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1329:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1350:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1329:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1329:69:2"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 636,
														"name": "kLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "1408:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 637,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1416:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1434:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LiquidityPool_$912",
																			"typeString": "contract LiquidityPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LiquidityPool_$912",
																			"typeString": "contract LiquidityPool"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1426:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1426:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1426:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1440:7:2",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1426:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1416:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1408:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "1408:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 650,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1485:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1489:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1485:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 654,
																	"name": "kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "1507:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 652,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "1497:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$503_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1502:4:2",
																"memberName": "sqrt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 466,
																"src": "1497:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1497:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "1464:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 646,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1457:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1457:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1476:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1457:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "1457:57:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 659,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1547:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1551:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1547:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "1559:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "1529:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "EmitStatement",
												"src": "1524:43:2"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "1099:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1124:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1116:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:17:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:0:2"
									},
									"scope": 912,
									"src": "1090:484:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "1632:505:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1650:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1666:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1650:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74206f6620736861726573",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1669:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																"typeString": "literal_string \"Invalid amount of shares\""
															},
															"value": "Invalid amount of shares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_253d9105940b6f011a4d3b38dbe975e35e2027103e5a9bee618e9cc10d73d98c",
																"typeString": "literal_string \"Invalid amount of shares\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1642:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1642:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "1642:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 682,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1743:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1747:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1743:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 686,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1763:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPool_$912",
																					"typeString": "contract LiquidityPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPool_$912",
																					"typeString": "contract LiquidityPool"
																				}
																			],
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1755:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 684,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1755:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1755:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 679,
																				"name": "ltrAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "1721:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 678,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "1714:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1714:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1733:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "1714:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1714:55:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 689,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "1773:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1714:72:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6561736520617070726f76652074686520636f6e747261637420746f20646564756374206c747220746f6b656e732066726f6d20796f75722077616c6c6574",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:67:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																"typeString": "literal_string \"Please approve the contract to deduct ltr tokens from your wallet\""
															},
															"value": "Please approve the contract to deduct ltr tokens from your wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5c7bdabd2ded64922d66e1d9e43d27aeb55bfef2e1b8c546157798b397e989b",
																"typeString": "literal_string \"Please approve the contract to deduct ltr tokens from your wallet\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1706:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1706:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "1706:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 698,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1899:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1903:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1899:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 702,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1919:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1911:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 700,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1911:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1911:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "_sharesAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1926:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 695,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "1874:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 694,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1867:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1867:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1886:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "1867:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "1867:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 711,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1980:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1984:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1980:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "_sharesAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1992:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 708,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "1957:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 707,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1950:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1950:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1971:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "1950:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1950:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "1950:56:2"
											},
											{
												"assignments": [
													717,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2022:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "2017:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 716,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2017:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 728,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2082:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 720,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2043:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2047:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2043:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2035:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2035:8:2",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2035:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2055:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2035:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 724,
																"name": "_sharesAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "2067:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2035:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2016:69:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2103:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2112:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2095:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "2095:35:2"
											}
										]
									},
									"functionSelector": "ff9b3758",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reedemShares",
									"nameLocation": "1589:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "_sharesAmount",
												"nameLocation": "1610:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1602:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:23:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1632:0:2"
									},
									"scope": 912,
									"src": "1580:557:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2186:569:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 745,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2235:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2239:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2235:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 749,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2255:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LiquidityPool_$912",
																					"typeString": "contract LiquidityPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LiquidityPool_$912",
																					"typeString": "contract LiquidityPool"
																				}
																			],
																			"id": 748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2247:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 747,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2247:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2247:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 742,
																				"name": "reserveToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "2211:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 741,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2204:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2204:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$581",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2225:9:2",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 558,
																	"src": "2204:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2204:57:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 752,
																"name": "_DAIAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2265:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2204:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f766564",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2277:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															},
															"value": "Contract not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48504bdc46a29744a363aedaf51364aebc3fc115cf42488dedd2700397181af0",
																"typeString": "literal_string \"Contract not approved\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2196:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:105:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "2196:105:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 761,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2345:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2349:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2345:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 765,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2365:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2357:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 763,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2357:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2357:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "_DAIAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "2372:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 758,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2318:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 757,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2311:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2311:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2332:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 580,
														"src": "2311:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2311:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "2311:72:2"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "totalTokens",
														"nameLocation": "2401:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "2393:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2393:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 778,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2454:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2446:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 776,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2446:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2446:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 773,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2422:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 772,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2415:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2415:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2436:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "2415:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2393:67:2"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "ethOut",
														"nameLocation": "2478:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "2470:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2470:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 786,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2495:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2487:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 784,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2487:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2487:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2501:7:2",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "2487:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 789,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "2511:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 790,
															"name": "totalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "2517:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2511:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2487:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2470:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 796,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2550:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2542:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2542:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2542:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2556:7:2",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "2542:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 799,
														"name": "ethOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2567:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "2613:136:2",
													"statements": [
														{
															"assignments": [
																806,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 806,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "2633:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "2628:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "2628:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 817,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2686:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 809,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2654:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 810,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2658:6:2",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2654:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2646:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 807,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2646:8:2",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2646:19:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2666:4:2",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "2646:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 813,
																			"name": "ethOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 783,
																			"src": "2678:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "2646:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2646:43:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2627:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 819,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "2711:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2720:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																			"typeString": "literal_string \"Transfer Failed\""
																		},
																		"value": "Transfer Failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																			"typeString": "literal_string \"Transfer Failed\""
																		}
																	],
																	"id": 818,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2703:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2703:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "2703:35:2"
														}
													]
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "2538:211:2",
												"trueBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "2575:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 801,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2589:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2589:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 803,
															"nodeType": "ExpressionStatement",
															"src": "2589:8:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8e3073a6",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEth",
									"nameLocation": "2152:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "_DAIAmount",
												"nameLocation": "2167:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2159:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2158:20:2"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2186:0:2"
									},
									"scope": 912,
									"src": "2143:612:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2794:348:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 830,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2812:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2816:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2812:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2824:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2812:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652065746820616d6f756e7420737570706c696564206d7573742062652067726561746572207468616e2030",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2827:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
																"typeString": "literal_string \"The eth amount supplied must be greater than 0\""
															},
															"value": "The eth amount supplied must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_557cfe28b845f8bf8a4370bc729344e9899cdce8121485053afbe9f4a3df51e9",
																"typeString": "literal_string \"The eth amount supplied must be greater than 0\""
															}
														],
														"id": 829,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2804:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2804:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "2804:72:2"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "totalDAISupply",
														"nameLocation": "2894:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "2886:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2886:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 845,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2950:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$912",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2942:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 843,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2942:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2942:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 840,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "2918:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 839,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2911:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2911:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2932:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "2911:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2911:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2886:70:2"
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "totalEthSupply",
														"nameLocation": "2974:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "2966:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2966:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 853,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2999:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LiquidityPool_$912",
																	"typeString": "contract LiquidityPool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_LiquidityPool_$912",
																	"typeString": "contract LiquidityPool"
																}
															],
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2991:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 851,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2991:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2991:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3005:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2991:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2966:46:2"
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "DAIOut",
														"nameLocation": "3030:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "3022:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3022:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "totalDAISupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "3039:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 860,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3056:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 861,
															"name": "totalEthSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "3062:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3056:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3039:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3022:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 869,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3116:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3120:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3116:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "DAIOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3128:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 866,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "3093:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 865,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "3086:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3107:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "3086:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3086:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "3086:49:2"
											}
										]
									},
									"functionSelector": "8ef85568",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDAI",
									"nameLocation": "2770:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2776:2:2"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2794:0:2"
									},
									"scope": 912,
									"src": "2761:381:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "3210:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "3248:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "3252:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 883,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "3227:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 882,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "3220:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$581_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3220:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$581",
																"typeString": "contract IERC20"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3239:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 548,
														"src": "3220:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3220:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "3220:40:2"
											}
										]
									},
									"functionSelector": "bec3fa17",
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "3157:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3180:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "3172:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3192:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "3184:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3184:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:29:2"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3210:0:2"
									},
									"scope": 912,
									"src": "3148:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3320:125:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 896,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3334:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3338:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3334:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3346:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3334:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 908,
													"nodeType": "Block",
													"src": "3397:42:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 905,
																		"name": "daiAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "3418:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 904,
																	"name": "getEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "3411:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3411:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "3411:17:2"
														}
													]
												},
												"id": 909,
												"nodeType": "IfStatement",
												"src": "3330:109:2",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "3349:33:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 900,
																	"name": "getDAI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "3363:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3363:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "ExpressionStatement",
															"src": "3363:8:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "94b918de",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "3282:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "daiAmount",
												"nameLocation": "3295:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3287:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3286:19:2"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:0:2"
									},
									"scope": 912,
									"src": "3273:172:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 913,
							"src": "622:2825:2",
							"usedErrors": []
						}
					],
					"src": "519:2928:2"
				},
				"id": 2
			}
		}
	}
}