{
	"id": "f039b673a164d6f8ff077c6a08f32e08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LiquidityPool.sol": {
				"content": "/*\n****Functions****\n1. Provide liquidity ( tokens reserves would be 50 50)\n\n2. Incetivize our liquidity provider with a custom token\n\n3. Swap function\n\n */\n\n//  SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\ncontract LiquidityPool {\n    // we'll have two tokens in the pool: the first will ether and the second, an erc20\n    address public reserveToken;\n    address constant ltrAddress = 0xf5e642e29D6516B2301dFa2Db87A40B4204B8d6B;\n\n    constructor(address _tokenAddress){\n        reserveToken = _tokenAddress;\n    }\n\n    event liquidityProvided(address _liquidityProvider, uint256 _shares);\n\n    function provideLiquidity(uint256 _amount) external payable {\n        require(msg.value == _amount, \"The amount of ETH and tokens should be equal\");\n        IERC20(ltrAddress).approve(address(this), 1000000000000000000000);\n        IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount);\n        IERC20(ltrAddress).transfer(msg.sender, _amount);\n        emit liquidityProvided(msg.sender, _amount);\n    }\n}\n\n"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LiquidityPool.sol": {
				"LiquidityPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_liquidityProvider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "liquidityProvided",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LiquidityPool.sol\":241:1051  contract LiquidityPool {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LiquidityPool.sol\":470:549  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LiquidityPool.sol\":529:542  _tokenAddress */\n  dup1\n    /* \"contracts/LiquidityPool.sol\":514:526  reserveToken */\n  0x00\n  dup1\n    /* \"contracts/LiquidityPool.sol\":514:542  reserveToken = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LiquidityPool.sol\":470:549  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/LiquidityPool.sol\":241:1051  contract LiquidityPool {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/LiquidityPool.sol\":241:1051  contract LiquidityPool {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LiquidityPool.sol\":241:1051  contract LiquidityPool {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xeb521a4c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf4325d67\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LiquidityPool.sol\":630:1049  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/LiquidityPool.sol\":358:385  address public reserveToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LiquidityPool.sol\":630:1049  function provideLiquidity(uint256 _amount) external payable {... */\n    tag_7:\n        /* \"contracts/LiquidityPool.sol\":721:728  _amount */\n      dup1\n        /* \"contracts/LiquidityPool.sol\":708:717  msg.value */\n      callvalue\n        /* \"contracts/LiquidityPool.sol\":708:728  msg.value == _amount */\n      eq\n        /* \"contracts/LiquidityPool.sol\":700:777  require(msg.value == _amount, \"The amount of ETH and tokens should be equal\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/LiquidityPool.sol\":421:463  0xf5e642e29D6516B2301dFa2Db87A40B4204B8d6B */\n      0xf5e642e29d6516b2301dfa2db87a40b4204b8d6b\n        /* \"contracts/LiquidityPool.sol\":787:813  IERC20(ltrAddress).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/LiquidityPool.sol\":822:826  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":829:851  1000000000000000000000 */\n      0x3635c9adc5dea00000\n        /* \"contracts/LiquidityPool.sol\":787:852  IERC20(ltrAddress).approve(address(this), 1000000000000000000000) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n        /* \"contracts/LiquidityPool.sol\":869:881  reserveToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LiquidityPool.sol\":862:895  IERC20(reserveToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LiquidityPool.sol\":896:906  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":916:920  this */\n      address\n        /* \"contracts/LiquidityPool.sol\":923:930  _amount */\n      dup5\n        /* \"contracts/LiquidityPool.sol\":862:931  IERC20(reserveToken).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_29:\n      pop\n        /* \"contracts/LiquidityPool.sol\":421:463  0xf5e642e29D6516B2301dFa2Db87A40B4204B8d6B */\n      0xf5e642e29d6516b2301dfa2db87a40b4204b8d6b\n        /* \"contracts/LiquidityPool.sol\":941:968  IERC20(ltrAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/LiquidityPool.sol\":969:979  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":981:988  _amount */\n      dup4\n        /* \"contracts/LiquidityPool.sol\":941:989  IERC20(ltrAddress).transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_35:\n      pop\n        /* \"contracts/LiquidityPool.sol\":1004:1042  liquidityProvided(msg.sender, _amount) */\n      0xb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da6\n        /* \"contracts/LiquidityPool.sol\":1022:1032  msg.sender */\n      caller\n        /* \"contracts/LiquidityPool.sol\":1034:1041  _amount */\n      dup3\n        /* \"contracts/LiquidityPool.sol\":1004:1042  liquidityProvided(msg.sender, _amount) */\n      mload(0x40)\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LiquidityPool.sol\":630:1049  function provideLiquidity(uint256 _amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/LiquidityPool.sol\":358:385  address public reserveToken */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_38:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_40\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_42:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_44\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:640   */\n    tag_23:\n        /* \"#utility.yul\":362:368   */\n      0x00\n        /* \"#utility.yul\":411:413   */\n      0x20\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":390:397   */\n      dup5\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:498   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":417:496   */\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":379:498   */\n    tag_47:\n        /* \"#utility.yul\":537:538   */\n      0x00\n        /* \"#utility.yul\":562:623   */\n      tag_50\n        /* \"#utility.yul\":615:622   */\n      dup5\n        /* \"#utility.yul\":606:612   */\n      dup3\n        /* \"#utility.yul\":595:604   */\n      dup6\n        /* \"#utility.yul\":591:613   */\n      add\n        /* \"#utility.yul\":562:623   */\n      tag_38\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":552:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":508:633   */\n      pop\n        /* \"#utility.yul\":295:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:975   */\n    tag_6:\n        /* \"#utility.yul\":705:711   */\n      0x00\n        /* \"#utility.yul\":754:756   */\n      0x20\n        /* \"#utility.yul\":742:751   */\n      dup3\n        /* \"#utility.yul\":733:740   */\n      dup5\n        /* \"#utility.yul\":729:752   */\n      sub\n        /* \"#utility.yul\":725:757   */\n      slt\n        /* \"#utility.yul\":722:841   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":760:839   */\n      tag_53\n      tag_49\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":722:841   */\n    tag_52:\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":905:958   */\n      tag_54\n        /* \"#utility.yul\":950:957   */\n      dup5\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":930:939   */\n      dup6\n        /* \"#utility.yul\":926:948   */\n      add\n        /* \"#utility.yul\":905:958   */\n      tag_42\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":895:958   */\n      swap2\n      pop\n        /* \"#utility.yul\":851:968   */\n      pop\n        /* \"#utility.yul\":646:975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1099   */\n    tag_55:\n        /* \"#utility.yul\":1068:1092   */\n      tag_57\n        /* \"#utility.yul\":1086:1091   */\n      dup2\n        /* \"#utility.yul\":1068:1092   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1063:1066   */\n      dup3\n        /* \"#utility.yul\":1056:1093   */\n      mstore\n        /* \"#utility.yul\":981:1099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1105:1294   */\n    tag_59:\n        /* \"#utility.yul\":1221:1287   */\n      tag_61\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1221:1287   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1216:1219   */\n      dup3\n        /* \"#utility.yul\":1209:1288   */\n      mstore\n        /* \"#utility.yul\":1105:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1666   */\n    tag_63:\n        /* \"#utility.yul\":1442:1445   */\n      0x00\n        /* \"#utility.yul\":1463:1530   */\n      tag_65\n        /* \"#utility.yul\":1527:1529   */\n      0x2c\n        /* \"#utility.yul\":1522:1525   */\n      dup4\n        /* \"#utility.yul\":1463:1530   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1456:1530   */\n      swap2\n      pop\n        /* \"#utility.yul\":1539:1632   */\n      tag_67\n        /* \"#utility.yul\":1628:1631   */\n      dup3\n        /* \"#utility.yul\":1539:1632   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1657:1659   */\n      0x40\n        /* \"#utility.yul\":1652:1655   */\n      dup3\n        /* \"#utility.yul\":1648:1660   */\n      add\n        /* \"#utility.yul\":1641:1660   */\n      swap1\n      pop\n        /* \"#utility.yul\":1300:1666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1672:1790   */\n    tag_69:\n        /* \"#utility.yul\":1759:1783   */\n      tag_71\n        /* \"#utility.yul\":1777:1782   */\n      dup2\n        /* \"#utility.yul\":1759:1783   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1754:1757   */\n      dup3\n        /* \"#utility.yul\":1747:1784   */\n      mstore\n        /* \"#utility.yul\":1672:1790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1796:2018   */\n    tag_12:\n        /* \"#utility.yul\":1889:1893   */\n      0x00\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1916:1925   */\n      dup3\n        /* \"#utility.yul\":1912:1930   */\n      add\n        /* \"#utility.yul\":1904:1930   */\n      swap1\n      pop\n        /* \"#utility.yul\":1940:2011   */\n      tag_74\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1993:2010   */\n      add\n        /* \"#utility.yul\":1984:1990   */\n      dup5\n        /* \"#utility.yul\":1940:2011   */\n      tag_55\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1796:2018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2466   */\n    tag_25:\n        /* \"#utility.yul\":2173:2177   */\n      0x00\n        /* \"#utility.yul\":2211:2213   */\n      0x60\n        /* \"#utility.yul\":2200:2209   */\n      dup3\n        /* \"#utility.yul\":2196:2214   */\n      add\n        /* \"#utility.yul\":2188:2214   */\n      swap1\n      pop\n        /* \"#utility.yul\":2224:2295   */\n      tag_76\n        /* \"#utility.yul\":2292:2293   */\n      0x00\n        /* \"#utility.yul\":2281:2290   */\n      dup4\n        /* \"#utility.yul\":2277:2294   */\n      add\n        /* \"#utility.yul\":2268:2274   */\n      dup7\n        /* \"#utility.yul\":2224:2295   */\n      tag_55\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2305:2377   */\n      tag_77\n        /* \"#utility.yul\":2373:2375   */\n      0x20\n        /* \"#utility.yul\":2362:2371   */\n      dup4\n        /* \"#utility.yul\":2358:2376   */\n      add\n        /* \"#utility.yul\":2349:2355   */\n      dup6\n        /* \"#utility.yul\":2305:2377   */\n      tag_55\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2387:2459   */\n      tag_78\n        /* \"#utility.yul\":2455:2457   */\n      0x40\n        /* \"#utility.yul\":2444:2453   */\n      dup4\n        /* \"#utility.yul\":2440:2458   */\n      add\n        /* \"#utility.yul\":2431:2437   */\n      dup5\n        /* \"#utility.yul\":2387:2459   */\n      tag_69\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2024:2466   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2862   */\n    tag_18:\n        /* \"#utility.yul\":2622:2626   */\n      0x00\n        /* \"#utility.yul\":2660:2662   */\n      0x40\n        /* \"#utility.yul\":2649:2658   */\n      dup3\n        /* \"#utility.yul\":2645:2663   */\n      add\n        /* \"#utility.yul\":2637:2663   */\n      swap1\n      pop\n        /* \"#utility.yul\":2673:2744   */\n      tag_80\n        /* \"#utility.yul\":2741:2742   */\n      0x00\n        /* \"#utility.yul\":2730:2739   */\n      dup4\n        /* \"#utility.yul\":2726:2743   */\n      add\n        /* \"#utility.yul\":2717:2723   */\n      dup6\n        /* \"#utility.yul\":2673:2744   */\n      tag_55\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2754:2855   */\n      tag_81\n        /* \"#utility.yul\":2851:2853   */\n      0x20\n        /* \"#utility.yul\":2840:2849   */\n      dup4\n        /* \"#utility.yul\":2836:2854   */\n      add\n        /* \"#utility.yul\":2827:2833   */\n      dup5\n        /* \"#utility.yul\":2754:2855   */\n      tag_59\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2472:2862   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2868:3200   */\n    tag_31:\n        /* \"#utility.yul\":2989:2993   */\n      0x00\n        /* \"#utility.yul\":3027:3029   */\n      0x40\n        /* \"#utility.yul\":3016:3025   */\n      dup3\n        /* \"#utility.yul\":3012:3030   */\n      add\n        /* \"#utility.yul\":3004:3030   */\n      swap1\n      pop\n        /* \"#utility.yul\":3040:3111   */\n      tag_83\n        /* \"#utility.yul\":3108:3109   */\n      0x00\n        /* \"#utility.yul\":3097:3106   */\n      dup4\n        /* \"#utility.yul\":3093:3110   */\n      add\n        /* \"#utility.yul\":3084:3090   */\n      dup6\n        /* \"#utility.yul\":3040:3111   */\n      tag_55\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3121:3193   */\n      tag_84\n        /* \"#utility.yul\":3189:3191   */\n      0x20\n        /* \"#utility.yul\":3178:3187   */\n      dup4\n        /* \"#utility.yul\":3174:3192   */\n      add\n        /* \"#utility.yul\":3165:3171   */\n      dup5\n        /* \"#utility.yul\":3121:3193   */\n      tag_69\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2868:3200   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3206:3625   */\n    tag_16:\n        /* \"#utility.yul\":3372:3376   */\n      0x00\n        /* \"#utility.yul\":3410:3412   */\n      0x20\n        /* \"#utility.yul\":3399:3408   */\n      dup3\n        /* \"#utility.yul\":3395:3413   */\n      add\n        /* \"#utility.yul\":3387:3413   */\n      swap1\n      pop\n        /* \"#utility.yul\":3459:3468   */\n      dup2\n        /* \"#utility.yul\":3453:3457   */\n      dup2\n        /* \"#utility.yul\":3449:3469   */\n      sub\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3434:3443   */\n      dup4\n        /* \"#utility.yul\":3430:3447   */\n      add\n        /* \"#utility.yul\":3423:3470   */\n      mstore\n        /* \"#utility.yul\":3487:3618   */\n      tag_86\n        /* \"#utility.yul\":3613:3617   */\n      dup2\n        /* \"#utility.yul\":3487:3618   */\n      tag_63\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3479:3618   */\n      swap1\n      pop\n        /* \"#utility.yul\":3206:3625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3712:3881   */\n    tag_66:\n        /* \"#utility.yul\":3796:3807   */\n      0x00\n        /* \"#utility.yul\":3830:3836   */\n      dup3\n        /* \"#utility.yul\":3825:3828   */\n      dup3\n        /* \"#utility.yul\":3818:3837   */\n      mstore\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3865:3868   */\n      dup3\n        /* \"#utility.yul\":3861:3875   */\n      add\n        /* \"#utility.yul\":3846:3875   */\n      swap1\n      pop\n        /* \"#utility.yul\":3712:3881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3887:3983   */\n    tag_58:\n        /* \"#utility.yul\":3924:3931   */\n      0x00\n        /* \"#utility.yul\":3953:3977   */\n      tag_91\n        /* \"#utility.yul\":3971:3976   */\n      dup3\n        /* \"#utility.yul\":3953:3977   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3942:3977   */\n      swap1\n      pop\n        /* \"#utility.yul\":3887:3983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3989:4079   */\n    tag_93:\n        /* \"#utility.yul\":4023:4030   */\n      0x00\n        /* \"#utility.yul\":4066:4071   */\n      dup2\n        /* \"#utility.yul\":4059:4072   */\n      iszero\n        /* \"#utility.yul\":4052:4073   */\n      iszero\n        /* \"#utility.yul\":4041:4073   */\n      swap1\n      pop\n        /* \"#utility.yul\":3989:4079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4085:4211   */\n    tag_92:\n        /* \"#utility.yul\":4122:4129   */\n      0x00\n        /* \"#utility.yul\":4162:4204   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4155:4160   */\n      dup3\n        /* \"#utility.yul\":4151:4205   */\n      and\n        /* \"#utility.yul\":4140:4205   */\n      swap1\n      pop\n        /* \"#utility.yul\":4085:4211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4217:4294   */\n    tag_72:\n        /* \"#utility.yul\":4254:4261   */\n      0x00\n        /* \"#utility.yul\":4283:4288   */\n      dup2\n        /* \"#utility.yul\":4272:4288   */\n      swap1\n      pop\n        /* \"#utility.yul\":4217:4294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4300:4442   */\n    tag_62:\n        /* \"#utility.yul\":4379:4388   */\n      0x00\n        /* \"#utility.yul\":4412:4436   */\n      tag_98\n        /* \"#utility.yul\":4430:4435   */\n      dup3\n        /* \"#utility.yul\":4412:4436   */\n      tag_72\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4399:4436   */\n      swap1\n      pop\n        /* \"#utility.yul\":4300:4442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4688   */\n    tag_49:\n        /* \"#utility.yul\":4680:4681   */\n      0x00\n        /* \"#utility.yul\":4677:4678   */\n      dup1\n        /* \"#utility.yul\":4670:4682   */\n      revert\n        /* \"#utility.yul\":4694:4925   */\n    tag_68:\n        /* \"#utility.yul\":4834:4868   */\n      0x54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f\n        /* \"#utility.yul\":4830:4831   */\n      0x00\n        /* \"#utility.yul\":4822:4828   */\n      dup3\n        /* \"#utility.yul\":4818:4832   */\n      add\n        /* \"#utility.yul\":4811:4869   */\n      mstore\n        /* \"#utility.yul\":4903:4917   */\n      0x756c6420626520657175616c0000000000000000000000000000000000000000\n        /* \"#utility.yul\":4898:4900   */\n      0x20\n        /* \"#utility.yul\":4890:4896   */\n      dup3\n        /* \"#utility.yul\":4886:4901   */\n      add\n        /* \"#utility.yul\":4879:4918   */\n      mstore\n        /* \"#utility.yul\":4694:4925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4931:5047   */\n    tag_41:\n        /* \"#utility.yul\":5001:5022   */\n      tag_104\n        /* \"#utility.yul\":5016:5021   */\n      dup2\n        /* \"#utility.yul\":5001:5022   */\n      tag_93\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4994:4999   */\n      dup2\n        /* \"#utility.yul\":4991:5023   */\n      eq\n        /* \"#utility.yul\":4981:5041   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":5037:5038   */\n      0x00\n        /* \"#utility.yul\":5034:5035   */\n      dup1\n        /* \"#utility.yul\":5027:5039   */\n      revert\n        /* \"#utility.yul\":4981:5041   */\n    tag_105:\n        /* \"#utility.yul\":4931:5047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5053:5175   */\n    tag_45:\n        /* \"#utility.yul\":5126:5150   */\n      tag_107\n        /* \"#utility.yul\":5144:5149   */\n      dup2\n        /* \"#utility.yul\":5126:5150   */\n      tag_72\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":5119:5124   */\n      dup2\n        /* \"#utility.yul\":5116:5151   */\n      eq\n        /* \"#utility.yul\":5106:5169   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":5165:5166   */\n      0x00\n        /* \"#utility.yul\":5162:5163   */\n      dup1\n        /* \"#utility.yul\":5155:5167   */\n      revert\n        /* \"#utility.yul\":5106:5169   */\n    tag_108:\n        /* \"#utility.yul\":5053:5175   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122080ffe53195fdc1fc9bf72f4b2cbd9f43fb2b9ce4bc5a7607ccfa7bb76d48b60964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106e63803806106e68339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b6105cf806101176000396000f3fe6080604052600436106100295760003560e01c8063eb521a4c1461002e578063f4325d671461004a575b600080fd5b6100486004803603810190610043919061036b565b610075565b005b34801561005657600080fd5b5061005f6102f0565b60405161006c91906103e8565b60405180910390f35b8034146100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061048c565b60405180910390fd5b73f5e642e29d6516b2301dfa2db87a40b4204b8d6b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b330683635c9adc5dea000006040518363ffffffff1660e01b815260040161010f92919061043a565b602060405180830381600087803b15801561012957600080fd5b505af115801561013d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610161919061033e565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016101bf93929190610403565b602060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610211919061033e565b5073f5e642e29d6516b2301dfa2db87a40b4204b8d6b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610261929190610463565b602060405180830381600087803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b3919061033e565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516102e5929190610463565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506103238161056b565b92915050565b60008135905061033881610582565b92915050565b60006020828403121561035457610353610517565b5b600061036284828501610314565b91505092915050565b60006020828403121561038157610380610517565b5b600061038f84828501610329565b91505092915050565b6103a1816104bd565b82525050565b6103b081610505565b82525050565b60006103c3602c836104ac565b91506103ce8261051c565b604082019050919050565b6103e2816104fb565b82525050565b60006020820190506103fd6000830184610398565b92915050565b60006060820190506104186000830186610398565b6104256020830185610398565b61043260408301846103d9565b949350505050565b600060408201905061044f6000830185610398565b61045c60208301846103a7565b9392505050565b60006040820190506104786000830185610398565b61048560208301846103d9565b9392505050565b600060208201905081810360008301526104a5816103b6565b9050919050565b600082825260208201905092915050565b60006104c8826104db565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610510826104fb565b9050919050565b600080fd5b7f54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f60008201527f756c6420626520657175616c0000000000000000000000000000000000000000602082015250565b610574816104cf565b811461057f57600080fd5b50565b61058b816104fb565b811461059657600080fd5b5056fea264697066735822122080ffe53195fdc1fc9bf72f4b2cbd9f43fb2b9ce4bc5a7607ccfa7bb76d48b60964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6E6 CODESIZE SUB DUP1 PUSH2 0x6E6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0xEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1 DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5 DUP3 PUSH2 0xCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5CF DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xF5E642E29D6516B2301DFA2DB87A40B4204B8D6B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP3 SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST POP PUSH20 0xF5E642E29D6516B2301DFA2DB87A40B4204B8D6B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261 SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x323 DUP2 PUSH2 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x338 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x354 JUMPI PUSH2 0x353 PUSH2 0x517 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x362 DUP5 DUP3 DUP6 ADD PUSH2 0x314 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x517 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP5 DUP3 DUP6 ADD PUSH2 0x329 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A1 DUP2 PUSH2 0x4BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3B0 DUP2 PUSH2 0x505 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 PUSH1 0x2C DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE DUP3 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E2 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x418 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x425 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x432 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x45C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x478 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x485 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A5 DUP2 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP3 PUSH2 0x4DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x510 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C6420626520657175616C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x574 DUP2 PUSH2 0x4CF JUMP JUMPDEST DUP2 EQ PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x58B DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SELFDESTRUCT 0xE5 BALANCE SWAP6 REVERT 0xC1 0xFC SWAP12 0xF7 0x2F 0x4B 0x2C 0xBD SWAP16 NUMBER 0xFB 0x2B SWAP13 0xE4 0xBC GAS PUSH23 0x7CCFA7BB76D48B60964736F6C63430008070033000000 ",
							"sourceMap": "241:810:1:-:0;;;470:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;529:13;514:12;;:28;;;;;;;;;;;;;;;;;;470:79;241:810;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;241:810:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@provideLiquidity_154": {
									"entryPoint": 117,
									"id": 154,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reserveToken_82": {
									"entryPoint": 752,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_1000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1000000000000000000000_by_1_to_t_uint256": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5178:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:2",
														"type": ""
													}
												],
												"src": "7:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:2",
														"type": ""
													}
												],
												"src": "150:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "417:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:2"
															},
															"nodeType": "YulIf",
															"src": "379:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "508:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "523:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "537:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "527:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "552:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "595:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "606:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "591:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "591:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "615:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "562:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "552:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "339:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "350:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "362:6:2",
														"type": ""
													}
												],
												"src": "295:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "712:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "758:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "760:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "760:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "733:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "725:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:32:2"
															},
															"nodeType": "YulIf",
															"src": "722:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "851:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "866:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "870:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "895:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "930:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "941:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "905:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "895:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "693:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "705:6:2",
														"type": ""
													}
												],
												"src": "646:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1086:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1068:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1068:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1056:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1056:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1034:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1041:3:2",
														"type": ""
													}
												],
												"src": "981:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1199:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1216:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1000000000000000000000_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1221:59:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1221:66:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1209:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1209:79:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1187:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1194:3:2",
														"type": ""
													}
												],
												"src": "1105:189:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1456:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1522:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1527:2:2",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1463:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1628:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																	"nodeType": "YulIdentifier",
																	"src": "1539:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1539:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1641:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1652:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1648:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1434:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:2",
														"type": ""
													}
												],
												"src": "1300:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1754:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1777:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1759:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1759:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1747:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1747:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1725:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1732:3:2",
														"type": ""
													}
												],
												"src": "1672:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1894:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1904:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1916:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1912:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1904:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2008:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1993:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1940:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1866:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1878:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1889:4:2",
														"type": ""
													}
												],
												"src": "1796:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2188:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2200:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2196:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2188:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2268:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2281:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2292:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2277:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2277:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2224:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2224:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2349:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2362:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2373:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2358:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2358:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2305:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2431:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2387:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2387:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2134:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2146:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2154:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2162:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2173:4:2",
														"type": ""
													}
												],
												"src": "2024:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2627:235:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2637:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2649:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2660:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2645:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2637:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2717:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2730:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2741:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2726:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2726:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2673:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2673:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2827:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2851:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2836:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2754:72:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:101:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2754:101:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2591:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2603:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2611:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2622:4:2",
														"type": ""
													}
												],
												"src": "2472:390:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2994:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3004:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3016:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3027:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3012:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3004:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3097:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3108:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3093:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3093:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3040:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3040:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3165:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3189:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3174:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3121:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3121:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2958:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2970:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2978:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2989:4:2",
														"type": ""
													}
												],
												"src": "2868:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3377:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3387:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3399:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3410:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3395:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3395:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3387:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3445:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3453:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3459:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3449:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3479:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3613:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3487:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3479:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3357:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3372:4:2",
														"type": ""
													}
												],
												"src": "3206:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3671:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3681:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3691:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3691:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3664:6:2",
														"type": ""
													}
												],
												"src": "3631:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3808:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3825:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3830:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3818:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3846:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3865:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3870:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3861:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3861:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3846:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3780:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3785:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3796:11:2",
														"type": ""
													}
												],
												"src": "3712:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3932:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3942:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3971:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3953:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3942:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3914:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3924:7:2",
														"type": ""
													}
												],
												"src": "3887:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4031:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4041:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4066:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4059:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4059:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4041:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4013:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4023:7:2",
														"type": ""
													}
												],
												"src": "3989:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4130:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4140:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4155:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4162:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4151:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4140:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4112:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4122:7:2",
														"type": ""
													}
												],
												"src": "4085:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4283:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4272:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4244:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4254:7:2",
														"type": ""
													}
												],
												"src": "4217:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4389:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4399:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4430:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4412:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4412:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4399:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1000000000000000000000_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4369:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4379:9:2",
														"type": ""
													}
												],
												"src": "4300:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4537:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4557:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4547:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4547:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4448:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4660:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4677:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4571:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4800:125:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4822:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4830:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4818:14:2"
																	},
																	{
																		"hexValue": "54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4834:34:2",
																		"type": "",
																		"value": "The amount of ETH and tokens sho"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4890:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4898:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4886:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4886:15:2"
																	},
																	{
																		"hexValue": "756c6420626520657175616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4903:14:2",
																		"type": "",
																		"value": "uld be equal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4879:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4879:39:2"
														}
													]
												},
												"name": "store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4792:6:2",
														"type": ""
													}
												],
												"src": "4694:231:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4971:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5025:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5034:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5037:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5027:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5027:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5027:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4994:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5016:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5001:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5001:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4991:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:40:2"
															},
															"nodeType": "YulIf",
															"src": "4981:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4964:5:2",
														"type": ""
													}
												],
												"src": "4931:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5096:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5153:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5162:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5165:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5155:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5155:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5155:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5119:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5144:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5126:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5126:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5116:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5116:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:43:2"
															},
															"nodeType": "YulIf",
															"src": "5106:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5089:5:2",
														"type": ""
													}
												],
												"src": "5053:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_1000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1000000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0(memPtr) {\n\n        mstore(add(memPtr, 0), \"The amount of ETH and tokens sho\")\n\n        mstore(add(memPtr, 32), \"uld be equal\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c8063eb521a4c1461002e578063f4325d671461004a575b600080fd5b6100486004803603810190610043919061036b565b610075565b005b34801561005657600080fd5b5061005f6102f0565b60405161006c91906103e8565b60405180910390f35b8034146100b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ae9061048c565b60405180910390fd5b73f5e642e29d6516b2301dfa2db87a40b4204b8d6b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b330683635c9adc5dea000006040518363ffffffff1660e01b815260040161010f92919061043a565b602060405180830381600087803b15801561012957600080fd5b505af115801561013d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610161919061033e565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016101bf93929190610403565b602060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610211919061033e565b5073f5e642e29d6516b2301dfa2db87a40b4204b8d6b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610261929190610463565b602060405180830381600087803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b3919061033e565b507fb62268a18d99fe191ac8e62f823ab1eec698609a81b2c8de3dac902896b09da633826040516102e5929190610463565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000815190506103238161056b565b92915050565b60008135905061033881610582565b92915050565b60006020828403121561035457610353610517565b5b600061036284828501610314565b91505092915050565b60006020828403121561038157610380610517565b5b600061038f84828501610329565b91505092915050565b6103a1816104bd565b82525050565b6103b081610505565b82525050565b60006103c3602c836104ac565b91506103ce8261051c565b604082019050919050565b6103e2816104fb565b82525050565b60006020820190506103fd6000830184610398565b92915050565b60006060820190506104186000830186610398565b6104256020830185610398565b61043260408301846103d9565b949350505050565b600060408201905061044f6000830185610398565b61045c60208301846103a7565b9392505050565b60006040820190506104786000830185610398565b61048560208301846103d9565b9392505050565b600060208201905081810360008301526104a5816103b6565b9050919050565b600082825260208201905092915050565b60006104c8826104db565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610510826104fb565b9050919050565b600080fd5b7f54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f60008201527f756c6420626520657175616c0000000000000000000000000000000000000000602082015250565b610574816104cf565b811461057f57600080fd5b50565b61058b816104fb565b811461059657600080fd5b5056fea264697066735822122080ffe53195fdc1fc9bf72f4b2cbd9f43fb2b9ce4bc5a7607ccfa7bb76d48b60964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF4325D67 EQ PUSH2 0x4A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x36B JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLVALUE EQ PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xF5E642E29D6516B2301DFA2DB87A40B4204B8D6B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP3 SWAP2 SWAP1 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST POP PUSH20 0xF5E642E29D6516B2301DFA2DB87A40B4204B8D6B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x261 SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x33E JUMP JUMPDEST POP PUSH32 0xB62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x323 DUP2 PUSH2 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x338 DUP2 PUSH2 0x582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x354 JUMPI PUSH2 0x353 PUSH2 0x517 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x362 DUP5 DUP3 DUP6 ADD PUSH2 0x314 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x517 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP5 DUP3 DUP6 ADD PUSH2 0x329 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A1 DUP2 PUSH2 0x4BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3B0 DUP2 PUSH2 0x505 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 PUSH1 0x2C DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE DUP3 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E2 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x418 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x425 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x432 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x44F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x45C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x478 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x398 JUMP JUMPDEST PUSH2 0x485 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A5 DUP2 PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8 DUP3 PUSH2 0x4DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x510 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C6420626520657175616C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x574 DUP2 PUSH2 0x4CF JUMP JUMPDEST DUP2 EQ PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x58B DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SELFDESTRUCT 0xE5 BALANCE SWAP6 REVERT 0xC1 0xFC SWAP12 0xF7 0x2F 0x4B 0x2C 0xBD SWAP16 NUMBER 0xFB 0x2B SWAP13 0xE4 0xBC GAS PUSH23 0x7CCFA7BB76D48B60964736F6C63430008070033000000 ",
							"sourceMap": "241:810:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;630:419;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;358:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;630:419;721:7;708:9;:20;700:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;421:42;787:26;;;822:4;829:22;787:65;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;869:12;;;;;;;;;;862:33;;;896:10;916:4;923:7;862:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;421:42;941:27;;;969:10;981:7;941:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1004:38;1022:10;1034:7;1004:38;;;;;;;:::i;:::-;;;;;;;;630:419;:::o;358:27::-;;;;;;;;;;;;:::o;7:137:2:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:345::-;362:6;411:2;399:9;390:7;386:23;382:32;379:119;;;417:79;;:::i;:::-;379:119;537:1;562:61;615:7;606:6;595:9;591:22;562:61;:::i;:::-;552:71;;508:125;295:345;;;;:::o;646:329::-;705:6;754:2;742:9;733:7;729:23;725:32;722:119;;;760:79;;:::i;:::-;722:119;880:1;905:53;950:7;941:6;930:9;926:22;905:53;:::i;:::-;895:63;;851:117;646:329;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;981:118;;:::o;1105:189::-;1221:66;1281:5;1221:66;:::i;:::-;1216:3;1209:79;1105:189;;:::o;1300:366::-;1442:3;1463:67;1527:2;1522:3;1463:67;:::i;:::-;1456:74;;1539:93;1628:3;1539:93;:::i;:::-;1657:2;1652:3;1648:12;1641:19;;1300:366;;;:::o;1672:118::-;1759:24;1777:5;1759:24;:::i;:::-;1754:3;1747:37;1672:118;;:::o;1796:222::-;1889:4;1927:2;1916:9;1912:18;1904:26;;1940:71;2008:1;1997:9;1993:17;1984:6;1940:71;:::i;:::-;1796:222;;;;:::o;2024:442::-;2173:4;2211:2;2200:9;2196:18;2188:26;;2224:71;2292:1;2281:9;2277:17;2268:6;2224:71;:::i;:::-;2305:72;2373:2;2362:9;2358:18;2349:6;2305:72;:::i;:::-;2387;2455:2;2444:9;2440:18;2431:6;2387:72;:::i;:::-;2024:442;;;;;;:::o;2472:390::-;2622:4;2660:2;2649:9;2645:18;2637:26;;2673:71;2741:1;2730:9;2726:17;2717:6;2673:71;:::i;:::-;2754:101;2851:2;2840:9;2836:18;2827:6;2754:101;:::i;:::-;2472:390;;;;;:::o;2868:332::-;2989:4;3027:2;3016:9;3012:18;3004:26;;3040:71;3108:1;3097:9;3093:17;3084:6;3040:71;:::i;:::-;3121:72;3189:2;3178:9;3174:18;3165:6;3121:72;:::i;:::-;2868:332;;;;;:::o;3206:419::-;3372:4;3410:2;3399:9;3395:18;3387:26;;3459:9;3453:4;3449:20;3445:1;3434:9;3430:17;3423:47;3487:131;3613:4;3487:131;:::i;:::-;3479:139;;3206:419;;;:::o;3712:169::-;3796:11;3830:6;3825:3;3818:19;3870:4;3865:3;3861:14;3846:29;;3712:169;;;;:::o;3887:96::-;3924:7;3953:24;3971:5;3953:24;:::i;:::-;3942:35;;3887:96;;;:::o;3989:90::-;4023:7;4066:5;4059:13;4052:21;4041:32;;3989:90;;;:::o;4085:126::-;4122:7;4162:42;4155:5;4151:54;4140:65;;4085:126;;;:::o;4217:77::-;4254:7;4283:5;4272:16;;4217:77;;;:::o;4300:142::-;4379:9;4412:24;4430:5;4412:24;:::i;:::-;4399:37;;4300:142;;;:::o;4571:117::-;4680:1;4677;4670:12;4694:231;4834:34;4830:1;4822:6;4818:14;4811:58;4903:14;4898:2;4890:6;4886:15;4879:39;4694:231;:::o;4931:116::-;5001:21;5016:5;5001:21;:::i;:::-;4994:5;4991:32;4981:60;;5037:1;5034;5027:12;4981:60;4931:116;:::o;5053:122::-;5126:24;5144:5;5126:24;:::i;:::-;5119:5;5116:35;5106:63;;5165:1;5162;5155:12;5106:63;5053:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "297400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"provideLiquidity(uint256)": "infinite",
								"reserveToken()": "2511"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 470,
									"end": 549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 529,
									"end": 542,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 514,
									"end": 526,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 514,
									"end": 542,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 542,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 542,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 514,
									"end": 542,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 470,
									"end": 549,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 1051,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080ffe53195fdc1fc9bf72f4b2cbd9f43fb2b9ce4bc5a7607ccfa7bb76d48b60964736f6c63430008070033",
									".code": [
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "EB521A4C"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "F4325D67"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 1051,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 717,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 708,
											"end": 728,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 700,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 700,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 421,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "F5E642E29D6516B2301DFA2DB87A40B4204B8D6B"
										},
										{
											"begin": 787,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 822,
											"end": 826,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 829,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 787,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 787,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 869,
											"end": 881,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 869,
											"end": 881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 869,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 881,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 869,
											"end": 881,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 869,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 881,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 862,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 862,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 896,
											"end": 906,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 916,
											"end": 920,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 923,
											"end": 930,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 862,
											"end": 931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "F5E642E29D6516B2301DFA2DB87A40B4204B8D6B"
										},
										{
											"begin": 941,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 941,
											"end": 968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 941,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 969,
											"end": 979,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 981,
											"end": 988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "B62268A18D99FE191AC8E62F823AB1EEC698609A81B2C8DE3DAC902896B09DA6"
										},
										{
											"begin": 1022,
											"end": 1032,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1042,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 630,
											"end": 1049,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 385,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 385,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 417,
											"end": 496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 379,
											"end": 498,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 379,
											"end": 498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 595,
											"end": 604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 591,
											"end": 613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 562,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 562,
											"end": 623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 508,
											"end": 633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 705,
											"end": 711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 733,
											"end": 740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 729,
											"end": 752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 725,
											"end": 757,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 760,
											"end": 839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 722,
											"end": 841,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 722,
											"end": 841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 926,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 905,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 905,
											"end": 958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 851,
											"end": 968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 975,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1068,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1294,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1105,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1221,
											"end": 1287,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1287,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1221,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1294,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1300,
											"end": 1666,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1300,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "2C"
										},
										{
											"begin": 1522,
											"end": 1525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1463,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1463,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1463,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1456,
											"end": 1530,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1628,
											"end": 1631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1539,
											"end": 1632,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 1632,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1539,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1652,
											"end": 1655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1666,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1672,
											"end": 1790,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1672,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1790,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1796,
											"end": 2018,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1796,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1930,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2010,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1940,
											"end": 2011,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1940,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 2018,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 2018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 2018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 2018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 2018,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2213,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2224,
											"end": 2295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2224,
											"end": 2295,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2224,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2373,
											"end": 2375,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2305,
											"end": 2377,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2305,
											"end": 2377,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2305,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2455,
											"end": 2457,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2437,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2387,
											"end": 2459,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2459,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2387,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2466,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 2663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2741,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2673,
											"end": 2744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2673,
											"end": 2744,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2673,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2851,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2754,
											"end": 2855,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2754,
											"end": 2855,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2754,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2862,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 2993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3030,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3093,
											"end": 3110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3040,
											"end": 3111,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3111,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3040,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3189,
											"end": 3191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3121,
											"end": 3193,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3121,
											"end": 3193,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3121,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 3200,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3206,
											"end": 3625,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3206,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3372,
											"end": 3376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3412,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3413,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3469,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3613,
											"end": 3617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3487,
											"end": 3618,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3487,
											"end": 3618,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3487,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3618,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3625,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3625,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3712,
											"end": 3881,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3712,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 3875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3881,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3881,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3887,
											"end": 3983,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3887,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3971,
											"end": 3976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3953,
											"end": 3977,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3953,
											"end": 3977,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3953,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3887,
											"end": 3983,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3887,
											"end": 3983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3887,
											"end": 3983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3887,
											"end": 3983,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3989,
											"end": 4079,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3989,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4072,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4073,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4079,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4079,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4079,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4079,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4085,
											"end": 4211,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4085,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4155,
											"end": 4160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4205,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4085,
											"end": 4211,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4294,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4217,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4294,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4300,
											"end": 4442,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4300,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4430,
											"end": 4435,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4412,
											"end": 4436,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4412,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4300,
											"end": 4442,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4571,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4571,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4694,
											"end": 4925,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4694,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "54686520616D6F756E74206F662045544820616E6420746F6B656E732073686F"
										},
										{
											"begin": 4830,
											"end": 4831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4818,
											"end": 4832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4917,
											"name": "PUSH",
											"source": 2,
											"value": "756C6420626520657175616C0000000000000000000000000000000000000000"
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4890,
											"end": 4896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4918,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4694,
											"end": 4925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4694,
											"end": 4925,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4931,
											"end": 5047,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4931,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5016,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 4999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5037,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4981,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 5047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 5047,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5126,
											"end": 5150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5126,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5126,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5119,
											"end": 5124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5116,
											"end": 5151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5106,
											"end": 5169,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5166,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5155,
											"end": 5167,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5169,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5106,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5053,
											"end": 5175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"provideLiquidity(uint256)": "eb521a4c",
							"reserveToken()": "f4325d67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"liquidityProvided\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]},\"contracts/LiquidityPool.sol\":{\"keccak256\":\"0xe413467fa1af2fe5c2153255b4e6ab9a92859c91fa5991773dcceea02d90b126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a819eb408beb5921f111c024789b6c12aa831ea819e6df43cb85722b91ddc32\",\"dweb:/ipfs/QmPcWXYE61QSNuvHRNt23qgnEd2Pw5FYjnGM1ExYHy1xHn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/LiquidityPool.sol:LiquidityPool",
								"label": "reserveToken",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2660:0"
				},
				"id": 0
			},
			"contracts/LiquidityPool.sol": {
				"ast": {
					"absolutePath": "contracts/LiquidityPool.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"LiquidityPool": [
							155
						]
					},
					"id": 156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "192:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 156,
							"sourceUnit": 78,
							"src": "217:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "LiquidityPool",
							"nameLocation": "250:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f4325d67",
									"id": 82,
									"mutability": "mutable",
									"name": "reserveToken",
									"nameLocation": "373:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "358:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 85,
									"mutability": "constant",
									"name": "ltrAddress",
									"nameLocation": "408:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "391:72:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "391:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307866356536343265323944363531364232333031644661324462383741343042343230344238643642",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "421:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xf5e642e29D6516B2301dFa2Db87A40B4204B8d6B"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "504:45:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "reserveToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "514:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "529:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "514:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "514:28:1"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "490:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "482:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:23:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "504:0:1"
									},
									"scope": 155,
									"src": "470:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 101,
									"name": "liquidityProvided",
									"nameLocation": "561:17:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "_liquidityProvider",
												"nameLocation": "587:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "579:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "_shares",
												"nameLocation": "615:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "607:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:45:1"
									},
									"src": "555:69:1"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "690:359:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 107,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "708:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "708:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 109,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "721:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "708:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520616d6f756e74206f662045544820616e6420746f6b656e732073686f756c6420626520657175616c",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "730:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																"typeString": "literal_string \"The amount of ETH and tokens should be equal\""
															},
															"value": "The amount of ETH and tokens should be equal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dae749c86c6521859fcad30b01cfe7afab5d09060ae7a1c76353b033fa604bb0",
																"typeString": "literal_string \"The amount of ETH and tokens should be equal\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "700:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "700:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 120,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "822:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$155",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$155",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "814:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "814:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "814:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030303030303030303030303030303030303030",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "829:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000000000000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 115,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "794:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 114,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "787:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "787:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "787:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "787:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "896:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "896:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 133,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "916:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LiquidityPool_$155",
																		"typeString": "contract LiquidityPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LiquidityPool_$155",
																		"typeString": "contract LiquidityPool"
																	}
																],
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "908:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 131,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "908:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "908:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 135,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "923:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"name": "reserveToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "869:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 125,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "862:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "862:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "862:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "862:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "969:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "969:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "981:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 139,
																	"name": "ltrAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "948:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 138,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "941:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "941:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "941:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "941:48:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 148,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1022:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1022:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 147,
														"name": "liquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1004:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1004:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "999:43:1"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "provideLiquidity",
									"nameLocation": "639:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:17:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:1"
									},
									"scope": 155,
									"src": "630:419:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 156,
							"src": "241:810:1",
							"usedErrors": []
						}
					],
					"src": "192:861:1"
				},
				"id": 1
			}
		}
	}
}